[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"27","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts":"28","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"29","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx":"30","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx":"31","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx":"32","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"33","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx":"34"},{"size":493,"mtime":1614716888412,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1610109245681,"results":"37","hashOfConfig":"36"},{"size":2119,"mtime":1617280451069,"results":"38","hashOfConfig":"36"},{"size":747,"mtime":1616171195708,"results":"39","hashOfConfig":"36"},{"size":1150,"mtime":1615031528153,"results":"40","hashOfConfig":"36"},{"size":740,"mtime":1617735208015,"results":"41","hashOfConfig":"36"},{"size":1551,"mtime":1614715707935,"results":"42","hashOfConfig":"36"},{"size":196,"mtime":1610628172032,"results":"43","hashOfConfig":"36"},{"size":174,"mtime":1613550620148,"results":"44","hashOfConfig":"36"},{"size":1926,"mtime":1617283982255,"results":"45","hashOfConfig":"36"},{"size":204,"mtime":1610628011587,"results":"46","hashOfConfig":"36"},{"size":944,"mtime":1617735232451,"results":"47","hashOfConfig":"36"},{"size":258,"mtime":1614525238843,"results":"48","hashOfConfig":"36"},{"size":395,"mtime":1614525139587,"results":"49","hashOfConfig":"36"},{"size":510,"mtime":1614525364405,"results":"50","hashOfConfig":"36"},{"size":1734,"mtime":1614769824477,"results":"51","hashOfConfig":"36"},{"size":3478,"mtime":1617789300215,"results":"52","hashOfConfig":"36"},{"size":2349,"mtime":1614524625350,"results":"53","hashOfConfig":"36"},{"size":2256,"mtime":1614772423096,"results":"54","hashOfConfig":"36"},{"size":1262,"mtime":1617453491282,"results":"55","hashOfConfig":"36"},{"size":721,"mtime":1617870069922,"results":"56","hashOfConfig":"36"},{"size":1317,"mtime":1615043808474,"results":"57","hashOfConfig":"36"},{"size":5444,"mtime":1617199812033,"results":"58","hashOfConfig":"36"},{"size":4707,"mtime":1617453491441,"results":"59","hashOfConfig":"36"},{"size":2464,"mtime":1617199457519,"results":"60","hashOfConfig":"36"},{"size":255,"mtime":1615815607505,"results":"61","hashOfConfig":"36"},{"size":2208,"mtime":1617790991956,"results":"62","hashOfConfig":"36"},{"size":1360,"mtime":1617207912436,"results":"63","hashOfConfig":"36"},{"size":1007,"mtime":1617286792691,"results":"64","hashOfConfig":"36"},{"size":1246,"mtime":1617790454351,"results":"65","hashOfConfig":"36"},{"size":324,"mtime":1617874709257,"results":"66","hashOfConfig":"36"},{"size":827,"mtime":1617450754766,"results":"67","hashOfConfig":"36"},{"size":1691,"mtime":1617790499720,"results":"68","hashOfConfig":"36"},{"size":856,"mtime":1617873822974,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"ifd9ew",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["157","158"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["159","160"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["161","162","163","164","165"],"import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Users} from \"./components/Users/Users\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport {setUserProfile} from \"./redux/profile-reducer\";\nimport {Login} from \"./components/Login/Login\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\ntype AppPropsType = {\n   // store: StoreType\n}\n\nfunction App(props: AppPropsType) {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route exact path=\"/dialogs\" render={() =>\n                    <DialogsContainer/>\n                    }/>\n                    <Route exact path={'/profile:userId?'} render={() =>\n                        <ProfileContainer /*store={props.store}*/ /*message={state.profilePage.messageForNewPost}*/\n                            /*dispatch={props.store.dispatch.bind(props.store)}*/\n                        />}/>\n\n                    <Route exact path=\"/music\" render={() => <Music title={'Music'}/>}/>\n                    <Route exact path=\"/news\" render={() => <News title={'News'}/>}/>\n                    <Route exact path=\"/settings\" render={() => <Settings title={'Settings'}/>}/>\n                    <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route exact path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["166"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderType = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Header(props: HeaderType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.data.login :\r\n                    <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["167","168"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["169"],"import React from 'react';\r\nimport s from './News.module.css';\r\ntype NewsType={\r\n    title:string\r\n}\r\nexport function News(props:NewsType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["170","171"],"import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n/*export type DialogsPropsType = {\r\n    /!*dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>*!/\r\n    sendMessage: () => void\r\n    //dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    dialogsPage: DialogsPageType\r\n}*/\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body);\r\n    }\r\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\r\n     const addMessage=()=>{\r\n         alert(addMessageRef.current?.value)\r\n     }*/\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea value={newMessageBody}\r\n                          onChange={onNewMessageChange}\r\n                          placeholder='Enter your message'></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>addMessage</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["172"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType={\r\n    title:string\r\n}\r\n\r\nexport function Music(props:MusicType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["173","174"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["175"],"import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PostsType={\r\n    message:string\r\n    likesCount:number\r\n    id:number\r\n}\r\n\r\nexport function Post(props: PostsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["176"],"import React from 'react';\r\nimport {addPostAC, changeNewTextAC, InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*\r\nexport type MyPostsContainerType = {}\r\n\r\nexport function MyPostsContainer(props: MyPostsContainerType) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    const addPost = () => {\r\n                        store.dispatch(addPostAC(store._state.profilePage.messageForNewPost))\r\n                        store.dispatch(changeNewTextAC(''))\r\n                    }\r\n                    const newTextChangeHandler = (text: string) => {\r\n                        store.dispatch(changeNewTextAC(text))\r\n                    }\r\n                    return (\r\n\r\n                        <div className={s.postsBlock}>\r\n                            <MyPosts changeNewText={newTextChangeHandler} addPost={addPost}\r\n                                     posts={state.profilePage.posts}\r\n                                     message={store._state.profilePage.messageForNewPost}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    )\r\n}\r\n*/\r\ntype mapDispatchToPropsType={\r\n    newTextChangeHandler:(newText:string)=>void\r\n    addPost:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    profilePage:InitialStateType\r\n    messageForNewPost:InitialStateType\r\n\r\n}\r\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        profilePage:state.profilePage,\r\n        messageForNewPost:state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        addPost:()=>{\r\n            dispatch(addPostAC())\r\n        },\r\n        newTextChangeHandler:(newText:string)=>{\r\n            dispatch(changeNewTextAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["177"],"import React from 'react';\r\nimport {ActionsTypes, InitialStateType, sendMessageBodyAC, updateNewMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\ntype mapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: (action: ActionsTypes) => void): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageBodyAC())\r\n        },\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageAC(body))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["178"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["179","180"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",["181"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nexport type ActionsTypes = ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unFollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingIsProgress>\r\n\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    status: string | null\r\n    followed: boolean\r\n    name: string\r\n    location: LocationType\r\n    photos: {\r\n        small: string | undefined\r\n        large: string | undefined\r\n    }\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<any>        //?????any\r\n}\r\n\r\nexport let initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let unFollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let setUsers = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n\r\n    } as const\r\n}\r\nexport let setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n\r\n    } as const\r\n}\r\nexport let setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\nexport let setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport let toggleFollowingIsProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const getUsers=(currentPage:any,pageSize:any)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(setToggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage,pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(setToggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\nexport const follow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(false,userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(true,userId))\r\n            })\r\n    }\r\n}\r\nexport const unFollow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(true,userId))\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(false,userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["182","183","184","185","186","187","188"],"import {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    followSuccess,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setToggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFollowingIsProgress, unFollow,\r\n    unFollowSuccess,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport UsersC from \"./Users–°\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport preolader from '../../assets/images/preolader1.gif'\r\nimport Prealoder from \"../common/prealoder/Prealoder\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type mapStateToPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n\r\n}\r\nexport type mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleFollowingIsProgress: (isFetching: boolean, userId: number) => void\r\n    setToggleIsFetching: (isFetching: boolean) => void\r\n    getUsers: (currentPage: any, pageSize: any) => void\r\n}\r\n\r\nexport type UsersApiPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersApiPropsType> {\r\n    /* constructor(props:UsersPropsType) {\r\n         super(props);\r\n         axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n             props.setUsers(response.data.items)\r\n         })\r\n     }*/\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        /* {\r\n             this.props.setToggleIsFetching(true)\r\n         }\r\n         this.props.setCurrentPage(pageNumber);\r\n         usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n                 this.props.setUsers(data.items)\r\n                 {\r\n                     this.props.setToggleIsFetching(false)\r\n                 }\r\n\r\n             })*/\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Prealoder/> : null}\r\n            <UsersC currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    pageSize={this.props.pageSize}\r\n                    setCurrentPage={this.props.setCurrentPage}\r\n                    setTotalUsersCount={this.props.setTotalUsersCount}\r\n                    setUsers={this.props.setUsers}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    unFollow={this.props.unFollow}\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst\r\n    mapStateToProps = (state: StateType): mapStateToPropsType => {\r\n        return {\r\n            users: state.usersPage.users,\r\n            pageSize: state.usersPage.pageSize,\r\n            totalUsersCount: state.usersPage.totalUsersCount,\r\n            currentPage: state.usersPage.currentPage,\r\n            isFetching: state.usersPage.isFetching,\r\n            followingInProgress: state.usersPage.followingInProgress\r\n        }\r\n    }\r\n/*const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollow: (userId: number) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users: Array<UsersType>) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount: number) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        setToggleIsFetchingAC: (isFetching: boolean) => {\r\n            dispatch(setToggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleFollowingIsProgress,\r\n        setToggleIsFetching,\r\n        getUsers\r\n    })\r\n)(UsersContainer)\r\n\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["189","190","191","192","193","194","195"],"import React from 'react';\r\nimport {UsersApiPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\nimport {inspect} from \"util\";\r\nimport {setCurrentPage, setToggleIsFetching, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\nconst UsersC = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ?\r\n\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.follow(u.id)\r\n                        }}>unFollow</button>\r\n\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unFollow(u.id)\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                    <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n                </div>\r\n            )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["196"],"import React from 'react';\r\nimport preolader from \"../../../assets/images/preolader1.gif\";\r\n\r\ntype PrealoderType={\r\n\r\n}\r\n\r\nconst Prealoder=(props:PrealoderType)=>{\r\n    return <div>\r\n        <img src={preolader}/>\r\n    </div>\r\n}\r\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["197","198","199","200"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts",["201","202","203","204"],"import {ProfileType} from \"./profile-reducer\";\r\nimport {authAPI, usersAPI} from \"../api/api\";\r\nimport {toggleFollowingIsProgress, unFollowSuccess} from \"./users-reducer\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nexport type ActionsTypes = ReturnType<typeof setUserData>\r\n\r\nexport type UserDataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n}\r\n\r\nexport type InitialStateType = {\r\n    data:UserDataType,\r\n    isAuth:boolean\r\n}\r\nlet InitialState:InitialStateType={\r\n    data:{} as UserDataType,\r\n    isAuth:false\r\n}\r\n\r\n\r\nconst authReducer = (state: InitialStateType=InitialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data:{...action.data,...state.data},\r\n                //...action.data,\r\n                isAuth:true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let setUserData = (data: UserDataType) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data\r\n    } as const\r\n}\r\nexport const getUserData=()=>(dispatch:any)=>{\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n\r\n                dispatch(setUserData(response.data.data))\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport default authReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["205","206","207"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Header} from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserData, UserDataType} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    data: UserDataType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUserData: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUserData()    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    data: state.auth.data\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUserData})(HeaderContainer);","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx",["208"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx",["209"],"import React, {Component, ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: StateType): mapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsForRedirectType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["210"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"211","replacedBy":"215"},{"ruleId":"213","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":15},{"ruleId":"217","severity":1,"message":"221","line":5,"column":9,"nodeType":"219","messageId":"220","endLine":5,"endColumn":16},{"ruleId":"217","severity":1,"message":"222","line":6,"column":9,"nodeType":"219","messageId":"220","endLine":6,"endColumn":16},{"ruleId":"217","severity":1,"message":"223","line":12,"column":9,"nodeType":"219","messageId":"220","endLine":12,"endColumn":14},{"ruleId":"217","severity":1,"message":"224","line":15,"column":9,"nodeType":"219","messageId":"220","endLine":15,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":14,"column":13,"nodeType":"227","endLine":15,"endColumn":120},{"ruleId":"217","severity":1,"message":"228","line":2,"column":9,"nodeType":"219","messageId":"220","endLine":2,"endColumn":16},{"ruleId":"217","severity":1,"message":"229","line":5,"column":22,"nodeType":"219","messageId":"220","endLine":5,"endColumn":34},{"ruleId":"217","severity":1,"message":"230","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":9},{"ruleId":"217","severity":1,"message":"231","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":16},{"ruleId":"217","severity":1,"message":"232","line":7,"column":9,"nodeType":"219","messageId":"220","endLine":7,"endColumn":17},{"ruleId":"217","severity":1,"message":"230","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":9},{"ruleId":"217","severity":1,"message":"233","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":23,"column":13,"nodeType":"227","endLine":23,"endColumn":52},{"ruleId":"225","severity":1,"message":"226","line":13,"column":17,"nodeType":"227","endLine":13,"endColumn":71},{"ruleId":"217","severity":1,"message":"234","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"232","line":6,"column":9,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":21,"column":21,"nodeType":"227","endLine":21,"endColumn":105},{"ruleId":"211","replacedBy":"235"},{"ruleId":"213","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":103,"column":66,"nodeType":"239","messageId":"240","endLine":103,"endColumn":68},{"ruleId":"217","severity":1,"message":"223","line":2,"column":9,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"241","line":6,"column":5,"nodeType":"219","messageId":"220","endLine":6,"endColumn":18},{"ruleId":"217","severity":1,"message":"242","line":13,"column":5,"nodeType":"219","messageId":"220","endLine":13,"endColumn":20},{"ruleId":"217","severity":1,"message":"243","line":16,"column":18,"nodeType":"219","messageId":"220","endLine":16,"endColumn":26},{"ruleId":"217","severity":1,"message":"244","line":19,"column":8,"nodeType":"219","messageId":"220","endLine":19,"endColumn":13},{"ruleId":"217","severity":1,"message":"245","line":20,"column":8,"nodeType":"219","messageId":"220","endLine":20,"endColumn":17},{"ruleId":"217","severity":1,"message":"246","line":22,"column":9,"nodeType":"219","messageId":"220","endLine":22,"endColumn":17},{"ruleId":"217","severity":1,"message":"247","line":2,"column":9,"nodeType":"219","messageId":"220","endLine":2,"endColumn":26},{"ruleId":"217","severity":1,"message":"244","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":13},{"ruleId":"217","severity":1,"message":"248","line":6,"column":9,"nodeType":"219","messageId":"220","endLine":6,"endColumn":16},{"ruleId":"217","severity":1,"message":"249","line":7,"column":9,"nodeType":"219","messageId":"220","endLine":7,"endColumn":23},{"ruleId":"217","severity":1,"message":"250","line":7,"column":25,"nodeType":"219","messageId":"220","endLine":7,"endColumn":44},{"ruleId":"217","severity":1,"message":"246","line":9,"column":9,"nodeType":"219","messageId":"220","endLine":9,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":45,"column":21,"nodeType":"227","endLine":45,"endColumn":105},{"ruleId":"225","severity":1,"message":"226","line":10,"column":9,"nodeType":"227","endLine":10,"endColumn":31},{"ruleId":"217","severity":1,"message":"244","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"224","line":6,"column":49,"nodeType":"219","messageId":"220","endLine":6,"endColumn":63},{"ruleId":"217","severity":1,"message":"232","line":8,"column":9,"nodeType":"219","messageId":"220","endLine":8,"endColumn":17},{"ruleId":"217","severity":1,"message":"246","line":9,"column":9,"nodeType":"219","messageId":"220","endLine":9,"endColumn":17},{"ruleId":"217","severity":1,"message":"251","line":1,"column":9,"nodeType":"219","messageId":"220","endLine":1,"endColumn":20},{"ruleId":"217","severity":1,"message":"246","line":2,"column":18,"nodeType":"219","messageId":"220","endLine":2,"endColumn":26},{"ruleId":"217","severity":1,"message":"252","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":34},{"ruleId":"217","severity":1,"message":"242","line":3,"column":36,"nodeType":"219","messageId":"220","endLine":3,"endColumn":51},{"ruleId":"217","severity":1,"message":"230","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":9},{"ruleId":"217","severity":1,"message":"231","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":16},{"ruleId":"217","severity":1,"message":"244","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"253","line":2,"column":9,"nodeType":"219","messageId":"220","endLine":2,"endColumn":21},{"ruleId":"217","severity":1,"message":"254","line":1,"column":16,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"230","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":9},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],["255"],["256"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'Users' is defined but never used.","'setUserProfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'updateStatus' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Prealoder' is defined but never used.","'React' is defined but never used.",["255"],["256"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'followSuccess' is defined but never used.","'unFollowSuccess' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","'preolader' is defined but never used.","'usersAPI' is defined but never used.","'UsersApiPropsType' is defined but never used.","'inspect' is defined but never used.","'setCurrentPage' is defined but never used.","'setToggleIsFetching' is defined but never used.","'ProfileType' is defined but never used.","'toggleFollowingIsProgress' is defined but never used.","'UserDataType' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]
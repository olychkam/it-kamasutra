[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"27"},{"size":493,"mtime":1614716888412,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1610109245681,"results":"30","hashOfConfig":"29"},{"size":1914,"mtime":1615893255826,"results":"31","hashOfConfig":"29"},{"size":327,"mtime":1610127150587,"results":"32","hashOfConfig":"29"},{"size":1150,"mtime":1615031528153,"results":"33","hashOfConfig":"29"},{"size":611,"mtime":1615886932934,"results":"34","hashOfConfig":"29"},{"size":1551,"mtime":1614715707935,"results":"35","hashOfConfig":"29"},{"size":196,"mtime":1610628172032,"results":"36","hashOfConfig":"29"},{"size":174,"mtime":1613550620148,"results":"37","hashOfConfig":"29"},{"size":1882,"mtime":1614525073039,"results":"38","hashOfConfig":"29"},{"size":204,"mtime":1610628011587,"results":"39","hashOfConfig":"29"},{"size":742,"mtime":1615893029827,"results":"40","hashOfConfig":"29"},{"size":258,"mtime":1614525238843,"results":"41","hashOfConfig":"29"},{"size":395,"mtime":1614525139587,"results":"42","hashOfConfig":"29"},{"size":510,"mtime":1614525364405,"results":"43","hashOfConfig":"29"},{"size":1734,"mtime":1614769824477,"results":"44","hashOfConfig":"29"},{"size":2492,"mtime":1615892915140,"results":"45","hashOfConfig":"29"},{"size":2349,"mtime":1614524625350,"results":"46","hashOfConfig":"29"},{"size":2256,"mtime":1614772423096,"results":"47","hashOfConfig":"29"},{"size":1089,"mtime":1614588930625,"results":"48","hashOfConfig":"29"},{"size":476,"mtime":1614858045657,"results":"49","hashOfConfig":"29"},{"size":1317,"mtime":1615043808474,"results":"50","hashOfConfig":"29"},{"size":3425,"mtime":1615816953222,"results":"51","hashOfConfig":"29"},{"size":4395,"mtime":1615817101479,"results":"52","hashOfConfig":"29"},{"size":2168,"mtime":1615833823483,"results":"53","hashOfConfig":"29"},{"size":255,"mtime":1615815607505,"results":"54","hashOfConfig":"29"},{"size":1429,"mtime":1615893208330,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ifd9ew",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["125","126"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["127","128"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["129","130","131","132"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["133"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nexport function Header(){\r\n    return(\r\n            <header className={s.header}>\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\r\n            </header>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["134"],"import React from 'react';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\n\r\ntype ProfileTypes = {\r\n    profile:ProfileType\r\n    //posts: Array<PostsType>\r\n    //message: string\r\n    //store:StoreType\r\n    //dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function Profile(props: ProfileTypes){\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["135"],"import React from 'react';\r\nimport s from './News.module.css';\r\ntype NewsType={\r\n    title:string\r\n}\r\nexport function News(props:NewsType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["136"],"import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\n/*export type DialogsPropsType = {\r\n    /!*dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>*!/\r\n    sendMessage: () => void\r\n    //dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    dialogsPage: DialogsPageType\r\n}*/\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body);\r\n    }\r\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\r\n     const addMessage=()=>{\r\n         alert(addMessageRef.current?.value)\r\n     }*/\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea value={newMessageBody}\r\n                          onChange={onNewMessageChange}\r\n                          placeholder='Enter your message'></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>addMessage</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["137"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType={\r\n    title:string\r\n}\r\n\r\nexport function Music(props:MusicType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["138","139","140"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["141"],"import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PostsType={\r\n    message:string\r\n    likesCount:number\r\n    id:number\r\n}\r\n\r\nexport function Post(props: PostsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["142"],"import React from 'react';\r\nimport {addPostAC, changeNewTextAC, InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*\r\nexport type MyPostsContainerType = {}\r\n\r\nexport function MyPostsContainer(props: MyPostsContainerType) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    const addPost = () => {\r\n                        store.dispatch(addPostAC(store._state.profilePage.messageForNewPost))\r\n                        store.dispatch(changeNewTextAC(''))\r\n                    }\r\n                    const newTextChangeHandler = (text: string) => {\r\n                        store.dispatch(changeNewTextAC(text))\r\n                    }\r\n                    return (\r\n\r\n                        <div className={s.postsBlock}>\r\n                            <MyPosts changeNewText={newTextChangeHandler} addPost={addPost}\r\n                                     posts={state.profilePage.posts}\r\n                                     message={store._state.profilePage.messageForNewPost}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    )\r\n}\r\n*/\r\ntype mapDispatchToPropsType={\r\n    newTextChangeHandler:(newText:string)=>void\r\n    addPost:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    profilePage:InitialStateType\r\n    messageForNewPost:InitialStateType\r\n\r\n}\r\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        profilePage:state.profilePage,\r\n        messageForNewPost:state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        addPost:()=>{\r\n            dispatch(addPostAC())\r\n        },\r\n        newTextChangeHandler:(newText:string)=>{\r\n            dispatch(changeNewTextAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["143"],"import React from 'react';\r\nimport {ActionsTypes, InitialStateType, sendMessageBodyAC, updateNewMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype mapDispatchToPropsType={\r\n    updateNewMessageBody:(body:string)=>void\r\n    sendMessage:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    dialogsPage:InitialStateType\r\n}\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: StateType):mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:(action:ActionsTypes) => void):mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageBodyAC())\r\n        },\r\n        updateNewMessageBody: (body:string) => {\r\n            dispatch(updateNewMessageAC(body))\r\n        }\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["144"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["145","146"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["147","148","149","150","151","152","153"],"import {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, setCurrentPage, setToggleIsFetching, setTotalUsersCount, setUsers,\r\n    unFollow,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport UsersC from \"./Users–°\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport preolader from '../../assets/images/preolader1.gif'\r\nimport Prealoder from \"../common/prealoder/Prealoder\";\r\n\r\nexport type mapStateToPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean\r\n}\r\nexport type mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setToggleIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\nexport type UsersApiPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersApiPropsType> {\r\n    /* constructor(props:UsersPropsType) {\r\n         super(props);\r\n         axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n             props.setUsers(response.data.items)\r\n         })\r\n     }*/\r\n    componentDidMount(): void {\r\n        {\r\n            this.props.setToggleIsFetching(true)\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&\r\n        count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n            {\r\n                this.props.setToggleIsFetching(false)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        {\r\n            this.props.setToggleIsFetching(true)\r\n        }\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&\r\n        count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                {\r\n                    this.props.setToggleIsFetching(false)\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Prealoder/> : null}\r\n            <UsersC currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    pageSize={this.props.pageSize}\r\n                    setCurrentPage={this.props.setCurrentPage}\r\n                    setTotalUsersCount={this.props.setTotalUsersCount}\r\n                    setUsers={this.props.setUsers}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    unFollow={this.props.unFollow}\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n/*const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollow: (userId: number) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users: Array<UsersType>) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount: number) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        setToggleIsFetchingAC: (isFetching: boolean) => {\r\n            dispatch(setToggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setToggleIsFetching\r\n})(UsersContainer);","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["154","155","156","157","158"],"import React from 'react';\r\nimport {UsersApiPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\nimport {inspect} from \"util\";\r\nimport {setCurrentPage, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n\r\n}\r\nconst UsersC = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile'+u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                    <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n                </div>\r\n            )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["159"],"import React from 'react';\r\nimport preolader from \"../../../assets/images/preolader1.gif\";\r\n\r\ntype PrealoderType={\r\n\r\n}\r\n\r\nconst Prealoder=(props:PrealoderType)=>{\r\n    return <div>\r\n        <img src={preolader}/>\r\n    </div>\r\n}\r\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":5,"column":9,"nodeType":"168","messageId":"169","endLine":5,"endColumn":16},{"ruleId":"166","severity":1,"message":"170","line":6,"column":9,"nodeType":"168","messageId":"169","endLine":6,"endColumn":16},{"ruleId":"166","severity":1,"message":"171","line":12,"column":9,"nodeType":"168","messageId":"169","endLine":12,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":15,"column":9,"nodeType":"168","messageId":"169","endLine":15,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":6,"column":17,"nodeType":"175","endLine":7,"endColumn":124},{"ruleId":"166","severity":1,"message":"176","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"177","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":9},{"ruleId":"166","severity":1,"message":"178","line":3,"column":9,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"177","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":9},{"ruleId":"166","severity":1,"message":"179","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":17,"column":17,"nodeType":"175","endLine":18,"endColumn":177},{"ruleId":"173","severity":1,"message":"174","line":20,"column":13,"nodeType":"175","endLine":20,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":13,"column":17,"nodeType":"175","endLine":13,"endColumn":71},{"ruleId":"166","severity":1,"message":"180","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"180","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":21,"column":21,"nodeType":"175","endLine":21,"endColumn":105},{"ruleId":"160","replacedBy":"181"},{"ruleId":"162","replacedBy":"182"},{"ruleId":"166","severity":1,"message":"171","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"183","line":9,"column":9,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"166","severity":1,"message":"184","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":42,"column":9,"nodeType":"187","messageId":"188","endLine":44,"endColumn":10},{"ruleId":"185","severity":1,"message":"186","line":49,"column":13,"nodeType":"187","messageId":"188","endLine":51,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":57,"column":9,"nodeType":"187","messageId":"188","endLine":59,"endColumn":10},{"ruleId":"185","severity":1,"message":"186","line":65,"column":17,"nodeType":"187","messageId":"188","endLine":67,"endColumn":18},{"ruleId":"166","severity":1,"message":"189","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":26},{"ruleId":"166","severity":1,"message":"190","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":13},{"ruleId":"166","severity":1,"message":"191","line":6,"column":9,"nodeType":"168","messageId":"169","endLine":6,"endColumn":16},{"ruleId":"166","severity":1,"message":"192","line":7,"column":9,"nodeType":"168","messageId":"169","endLine":7,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":44,"column":21,"nodeType":"175","endLine":44,"endColumn":105},{"ruleId":"173","severity":1,"message":"174","line":10,"column":9,"nodeType":"175","endLine":10,"endColumn":31},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Dialogs' is defined but never used.","'Users' is defined but never used.","'setUserProfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Prealoder' is defined but never used.","'React' is defined but never used.",["193"],["194"],"'Dispatch' is defined but never used.","'preolader' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'UsersApiPropsType' is defined but never used.","'axios' is defined but never used.","'inspect' is defined but never used.","'setCurrentPage' is defined but never used.","no-global-assign","no-unsafe-negation"]
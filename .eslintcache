[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts":"27","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx":"29","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx":"30","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx":"31","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx":"33","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts":"34","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx":"35","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\app-reducer.ts":"36","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-selectors.ts":"37","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostForm.tsx":"38","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\AddMessageForm.tsx":"39","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"40"},{"size":594,"mtime":1618852284365,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1610109245681,"results":"43","hashOfConfig":"42"},{"size":2687,"mtime":1618854351300,"results":"44","hashOfConfig":"42"},{"size":873,"mtime":1618419015000,"results":"45","hashOfConfig":"42"},{"size":1124,"mtime":1618419015000,"results":"46","hashOfConfig":"42"},{"size":716,"mtime":1618419015000,"results":"47","hashOfConfig":"42"},{"size":1360,"mtime":1619535311769,"results":"48","hashOfConfig":"42"},{"size":187,"mtime":1618419015000,"results":"49","hashOfConfig":"42"},{"size":165,"mtime":1618419015000,"results":"50","hashOfConfig":"42"},{"size":1529,"mtime":1619535670891,"results":"51","hashOfConfig":"42"},{"size":193,"mtime":1618419015000,"results":"52","hashOfConfig":"42"},{"size":998,"mtime":1619889060347,"results":"53","hashOfConfig":"42"},{"size":247,"mtime":1618419015000,"results":"54","hashOfConfig":"42"},{"size":381,"mtime":1618419015000,"results":"55","hashOfConfig":"42"},{"size":489,"mtime":1618419015000,"results":"56","hashOfConfig":"42"},{"size":1340,"mtime":1619536986529,"results":"57","hashOfConfig":"42"},{"size":3016,"mtime":1619538681113,"results":"58","hashOfConfig":"42"},{"size":992,"mtime":1619531570439,"results":"59","hashOfConfig":"42"},{"size":1111,"mtime":1619539158868,"results":"60","hashOfConfig":"42"},{"size":1102,"mtime":1619537771420,"results":"61","hashOfConfig":"42"},{"size":1317,"mtime":1615043808474,"results":"62","hashOfConfig":"42"},{"size":5366,"mtime":1619538477906,"results":"63","hashOfConfig":"42"},{"size":3695,"mtime":1619007166776,"results":"64","hashOfConfig":"42"},{"size":2356,"mtime":1618588210097,"results":"65","hashOfConfig":"42"},{"size":243,"mtime":1618854983253,"results":"66","hashOfConfig":"42"},{"size":2224,"mtime":1618848601446,"results":"67","hashOfConfig":"42"},{"size":2885,"mtime":1619538785876,"results":"68","hashOfConfig":"42"},{"size":1148,"mtime":1618760354497,"results":"69","hashOfConfig":"42"},{"size":1415,"mtime":1619009017676,"results":"70","hashOfConfig":"42"},{"size":649,"mtime":1618587356453,"results":"71","hashOfConfig":"42"},{"size":805,"mtime":1618419015000,"results":"72","hashOfConfig":"42"},{"size":1628,"mtime":1618419015000,"results":"73","hashOfConfig":"42"},{"size":3405,"mtime":1618753531289,"results":"74","hashOfConfig":"42"},{"size":264,"mtime":1618419015000,"results":"75","hashOfConfig":"42"},{"size":750,"mtime":1618419015000,"results":"76","hashOfConfig":"42"},{"size":1061,"mtime":1619539010877,"results":"77","hashOfConfig":"42"},{"size":641,"mtime":1619007421697,"results":"78","hashOfConfig":"42"},{"size":950,"mtime":1619534451033,"results":"79","hashOfConfig":"42"},{"size":972,"mtime":1619535618014,"results":"80","hashOfConfig":"42"},{"size":1160,"mtime":1619899685516,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"ifd9ew",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"84"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["190","191"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["192","193"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["194","195"],"import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialize} from \"./redux/app-reducer\";\nimport {StateType} from \"./redux/redux-store\";\nimport Prealoder from \"./components/common/prealoder/Prealoder\";\n\ntype AppPropsType = mapDispatchToPropsType & mapStateToPropsType\n\nexport type mapDispatchToPropsType = {\n    initialize: () => void\n}\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\n\n\nclass App extends React.Component<AppPropsType, any> {\n\n    componentDidMount() {\n        this.props.initialize()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Prealoder/>\n        }\n        return (\n\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className=\"app-wrapper-content\">\n                        <Route exact path=\"/dialogs\" render={() =>\n                            <DialogsContainer/>\n                        }/>\n                        <Route exact path={'/profile:userId?'} render={() =>\n                            <ProfileContainer /*store={props.store}*/ /*message={state.profilePage.messageForNewPost}*/\n                                /*dispatch={props.store.dispatch.bind(props.store)}*/\n                            />}/>\n\n                        <Route exact path=\"/music\" render={() => <Music title={'Music'}/>}/>\n                        <Route exact path=\"/news\" render={() => <News title={'News'}/>}/>\n                        <Route exact path=\"/settings\" render={() => <Settings title={'Settings'}/>}/>\n                        <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route exact path=\"/login\" render={() => <Login/>}/>\n                    </div>\n                </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialize}))(App);\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["196"],"import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport type HeaderType = {\n    //userData: UserDataType\n    id: number | null\n    login: string | null\n    email: string | null\n    isAuth: boolean\n    logout:()=>void\n\n}\n\nexport function Header(props: HeaderType) {\n    debugger\n    return (\n        <header className={s.header}>\n            <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\n            <div className={s.loginBlock}>\n                {props.isAuth ? <div>{props.login} - <button onClick={()=> {props.logout()}}>Log out</button></div>\n                    :\n                    <NavLink to={'/login'}>\n                        Login\n                    </NavLink>\n                }\n            </div>\n\n        </header>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["197","198"],"import React from 'react';\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType, updateStatus} from \"../../redux/profile-reducer\";\n\n\ntype ProfileTypes = {\n    profile:ProfileType\n    status:string\n    updateStatus:(status:string)=>void\n    //posts: Array<PostsType>\n    //message: string\n    //store:StoreType\n    //dispatch: (action: ActionsTypes) => void\n}\n\nexport function Profile(props: ProfileTypes){\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostContainer/>\n        </div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["199"],"import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\n\nimport {MyPostsType} from \"./MyPostsContainer\";\nimport {AddPostReduxForm} from \"./MyPostForm\";\n\n/*export type MyPostsType = {\n   posts: Array<PostsType>\n   message: string\n    //dispatch: (action: ActionsTypes) => void\n    changeNewText:(text:string)=>void\n    addPost:()=>void\n\n}*/\n\nexport function MyPosts(props: MyPostsType) {\n\n\n    let postsElement = props.profilePage.posts.map\n    (p => <Post message={p.message}\n                likesCount={p.likesCount}\n                id={p.id}\n    />)\n    let addNewPost = (values: any) => {\n        props.addPost(values.messageForNewPost)\n\n    }\n    /*const onAddPost = () => {\n        props.addPost()\n       // props.dispatch(addPostAC(props.message))\n        props.newTextChangeHandler('')\n       // props.dispatch(changeNewTextAC(''))\n    }\n    const newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let text = e.currentTarget.value\n        props.newTextChangeHandler(text)\n       // props.dispatch(changeNewTextAC(text))\n    }*/\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>Hi</h3>\n           < AddPostReduxForm onSubmit={addNewPost}/>\n\n            <div className={s.posts}>\n                {postsElement}\n            </div>\n        </div>\n\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["200"],"import React from 'react';\nimport s from './News.module.css';\ntype NewsType={\n    title:string\n}\nexport function News(props:NewsType){\n    return(\n        <div>{props.title}</div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["201","202","203","204"],"import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\nimport {Message} from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {Redirect} from 'react-router-dom';\nimport {AddMessageReduxForm} from \"./AddMessageForm\";\n\n\n/*export type DialogsPropsType = {\n    /!*dialogs: Array<DialogsType>\n    messages: Array<MessagesType>*!/\n    sendMessage: () => void\n    //dispatch: (action: ActionsTypes) => void\n    updateNewMessageBody: (body: string) => void\n    dialogsPage: DialogsPageType\n}*/\n\nexport function Dialogs(props: DialogsPropsType) {\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\n    let newMessageBody = props.dialogsPage.newMessageBody;\n\n\n    let addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n    }\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\n     const addMessage=()=>{\n         alert(addMessageRef.current?.value)\n     }*/\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\n\n\n        </div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["205"],"import React from 'react';\nimport s from './Music.module.css';\n\ntype MusicType={\n    title:string\n}\n\nexport function Music(props:MusicType){\n    return(\n        <div>{props.title}</div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["206","207","208"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["209"],"import React from 'react';\nimport s from './Post.module.css';\ntype PostsType={\n    message:string\n    likesCount:number\n    id:number\n}\n\nexport function Post(props: PostsType) {\n    return (\n        <div>\n            <div className={s.item}>\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\n                {props.message}\n                <div>\n                    <span>Like</span> {props.likesCount}\n                </div>\n            </div>\n        </div>\n\n    )\n}",["210","211"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["212"],"import React from 'react';\nimport {addPostAC, InitialStateType} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype mapDispatchToPropsType={\n    addPost:(messageForNewPost:any)=>void\n}\ntype mapStateToPropsType={\n    profilePage:InitialStateType\n    messageForNewPost:InitialStateType\n\n}\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\n\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\n    return {\n        profilePage:state.profilePage,\n        messageForNewPost:state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\n    return {\n        addPost:(messageForNewPost:string)=>{\n            dispatch(addPostAC(messageForNewPost))\n        }\n    }\n}\n\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["213"],"import React from 'react';\nimport {ActionsDialogsTypes, InitialStateType, sendMessageBodyAC} from \"../../redux/dialogs-reducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype mapDispatchToPropsType = {\n\n    sendMessage: (newMessageBody:any) => void\n}\ntype mapStateToPropsType = {\n    dialogsPage: InitialStateType\n}\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\n\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch: (action: ActionsDialogsTypes) => void): mapDispatchToPropsType => {\n    return {\n        sendMessage: (newMessageBody:any) => {\n            dispatch(sendMessageBodyAC(newMessageBody))\n        }\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["214"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["215","216"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",["217"],"import {usersAPI} from \"../api/api\";\nimport {AppThunk} from \"./redux-store\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\n\nexport type ActionsUsersTypes = ReturnType<typeof followSuccess> |\n    ReturnType<typeof unFollowSuccess> |\n    ReturnType<typeof setUsers> |\n    ReturnType<typeof setCurrentPage> |\n    ReturnType<typeof setTotalUsersCount> |\n    ReturnType<typeof setToggleIsFetching> |\n    ReturnType<typeof toggleFollowingIsProgress>\n\n\nexport type LocationType = {\n    city: string\n    country: string\n}\nexport type UsersType = {\n    id: number\n    status: string | null\n    followed: boolean\n    name: string\n    location: LocationType\n    photos: {\n        small: string | undefined\n        large: string | undefined\n    }\n}\n\nexport type InitialStateType = {\n    users: Array<UsersType>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: Array<any>        //?????any\n}\n\nexport let initialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsUsersTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\n                    : [state.followingInProgress.filter(id => id != action.userId)]\n            }\n        }\n\n        default:\n            return state;\n    }\n}\nexport let followSuccess = (userId: number) => {\n    return {\n        type: FOLLOW,\n        userId\n\n    } as const\n}\nexport let unFollowSuccess = (userId: number) => {\n    return {\n        type: UNFOLLOW,\n        userId\n\n    } as const\n}\nexport let setUsers = (users: Array<UsersType>) => {\n    return {\n        type: SET_USERS,\n        users\n\n    } as const\n}\nexport let setCurrentPage = (currentPage: number) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage\n\n    } as const\n}\nexport let setTotalUsersCount = (totalCount: number) => {\n    return {\n        type: SET_TOTAL_USERS_COUNT,\n        totalCount\n    } as const\n}\nexport let setToggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    } as const\n}\nexport let toggleFollowingIsProgress = (isFetching: boolean, userId: number) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\n        isFetching,\n        userId\n    } as const\n}\n\nexport const requestUsers=(currentPage:any, pageSize:any):AppThunk=>{\n    return(dispatch)=>{\n        dispatch(setToggleIsFetching(true))\n        dispatch(setCurrentPage(currentPage))\n        usersAPI.getUsers(currentPage,pageSize)\n            .then(data => {\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount))\n                dispatch(setToggleIsFetching(false))\n            })\n    }\n}\nexport const follow=(userId:number):AppThunk=>{\n    return(dispatch)=>{\n        dispatch(toggleFollowingIsProgress(false,userId))\n        usersAPI.follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollowSuccess(userId))\n                }\n                dispatch(toggleFollowingIsProgress(true,userId))\n            })\n    }\n}\nexport const unFollow=(userId:number):AppThunk=>{\n    return(dispatch)=>{\n        dispatch(toggleFollowingIsProgress(true,userId))\n        usersAPI.unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(followSuccess(userId))\n                }\n                dispatch(toggleFollowingIsProgress(false,userId))\n            })\n    }\n}\n\nexport default usersReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["218","219","220","221","222"],"import React from 'react';\nimport {UsersApiPropsType} from \"./UsersContainer\";\nimport s from './Users.module.css'\nimport axios from \"axios\";\nimport usersPhoto from '../../assets/images/users.png'\nimport {inspect} from \"util\";\nimport {UsersType} from \"../../redux/users-reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {usersAPI} from \"../../api/api\";\n\nexport type UsersPropsType = {\n    users: Array<UsersType>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    onPageChanged: (pageNumber: number) => void\n    followingInProgress: Array<number>\n}\nconst UsersC = (props: UsersPropsType) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages: Array<number> = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return <div>\n        <div>\n            {pages.map(p => {\n                return <span onClick={(e) => {\n                    props.onPageChanged(p)\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n            <span>\n                <div>\n                    <NavLink to={'/profile' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {u.followed === true ?\n\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.follow(u.id)\n                        }}>unFollow</button>\n\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.unFollow(u.id)\n\n                        }}>Follow</button>\n                    }\n                </div>\n            </span>\n                    <span>\n                 <div>{u.name}</div>\n                <div>{u.status}</div>\n            </span>\n                </div>\n            )}\n    </div>\n}\n\n\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["223"],"import React from 'react';\nimport preolader from \"../../../assets/images/preolader1.gif\";\n\ntype PrealoderType={\n\n}\n\nconst Prealoder=(props:PrealoderType)=>{\n    return <div>\n        <img src={preolader}/>\n    </div>\n}\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["224","225","226","227"],"import React from 'react';\nimport {Profile} from \"./Profile\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {getStatus, getUserProfile, ProfileType, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport Prealoder from \"../common/prealoder/Prealoder\";\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {usersAPI} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n/*type ProfileType = {\n    //posts: Array<PostsType>\n    //message: string\n    //store:StoreType\n    //dispatch: (action: ActionsTypes) => void\n}*/\ntype mapStateToPropsType = {\n    profile: ProfileType | null\n    status:string,\n}\n\ntype mapDispatchToPropsType = {\n    getUserProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus:(status:string)=>void\n}\n\ntype PatchParamsType = {\n    userId: string\n}\ntype onProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\n\ntype ProfileContainerType = RouteComponentProps<PatchParamsType> & onProfileContainerType\n\nclass ProfileContainer extends React.Component<ProfileContainerType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = '11025'\n            if(!userId){\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n\n        if (!this.props.profile) {\n            return <Prealoder/>\n        }\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    status:state.profilePage.status,\n})\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts",["228","229","230","231","232","233","234"],"import {ProfileType} from \"./profile-reducer\";\nimport {authAPI, usersAPI} from \"../api/api\";\nimport {toggleFollowingIsProgress, unFollowSuccess} from \"./users-reducer\";\nimport {Dispatch} from \"redux\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppThunk, StateType} from \"./redux-store\";\n\nconst SET_USER_DATA = 'SET-USER-DATA';\n\nexport type ActionsAuthTypes = ReturnType<typeof setUserData>\n\n/*export type UserDataType = {\n    id: number | null\n    email: string | null\n    login: string | null\n}*/\nexport type InitialStateType = {\n    id: number | null\n    email: string | null\n    login: string | null\n    isAuth: boolean\n}\nlet InitialState: InitialStateType = {\n    //userData: {} as UserDataType,\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\nexport type SetDataToAuthStateType = {\n    type: 'SET-USER-DATA'\n    payload: {\n        id: number | null\n        login: string | null\n        email: string | null\n        isAuth: boolean\n    }\n}\nexport type AuthActionTotalType = SetDataToAuthStateType\n/*\nexport type SetDataToAuthStateType = {\n    type: 'SET-USER-DATA'\n    payload: {\n        id: number | null\n        login: string | null\n        email: string | null\n    }\n}\n*/\n\n\nconst authReducer = (state: InitialStateType = InitialState, action: AuthActionTotalType): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                // userData:{...action.data, ...state.userData},\n                //...action .data,\n            };\n        default:\n            return state;\n    }\n}\nexport let setUserData = (id: number | null, email: string | null,\n                          login: string | null, isAuth: boolean): SetDataToAuthStateType => {\n    return {\n        type: SET_USER_DATA,\n        payload: {\n            id, email, login, isAuth\n        }\n    } as const\n}\nexport const getUserData = (): AppThunk => (dispatch) => {\n    return authAPI.me()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                let {id, email, login} = response.data.data\n                dispatch(setUserData(id, email, login, true))\n            }\n        })\n}\nexport const login = (email: string | null, password: string | null, rememberMe: boolean): AppThunk =>\n    (dispatch) => {\n        debugger\n        authAPI.login(email, password, rememberMe)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(getUserData())\n                }\n            })\n\n    }\nexport const logout = (): AppThunk =>\n    (dispatch) => {\n        authAPI.logout()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n\n                    dispatch(setUserData(null, null, null, false))\n                }\n            })\n\n    }\n\nexport default authReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["235","236","237","238","239","240"],"import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {Header, HeaderType} from \"./Header\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getUserData, InitialStateType, logout} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    // userData: UserDataType\n    //state:InitialStateType\n    login: string | null\n    id: number | null\n    email: string | null\n\n\n}\ntype mapDispatchToPropsType = {\n    logout: () => void\n\n\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    // userData: state.auth.userData\n    //state:state.auth\n    login: state.auth.login,\n    id: state.auth.id,\n    email: state.auth.email\n\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx",["241","242","243"],"import React from 'react';\nimport {LoginForm} from \"./LoginForm\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {login} from '../../redux/auth-reducer';\nimport {Redirect} from 'react-router-dom';\nimport {StateType} from \"../../redux/redux-store\";\n\ntype LoginType = {\n    login: (login: string, password: string, rememberMe: boolean) => void\n}\nconst Login = (props: LoginType) => {\n    //let dispatch = useDispatch()\n\n    /* if (props.isAuth) {\n         return <Redirect to={'/profile'}/>\n     }*/\n    return <div>\n        <h1>Login</h1>\n      <LoginForm/>\n    </div>\n}\n\nexport default connect(null, {login})(Login)\n//export default Login\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx",["244"],"import React, {Component, ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {StateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStateToPropsForRedirect = (state: StateType): mapStateToPropsForRedirectType => ({\n    isAuth: state.auth.isAuth\n})\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: mapStateToPropsForRedirectType) => {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["245"],"import React from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\ntype ProfileStatusStateType = {\n    editMode: boolean\n    status: string\n}\n\nexport class ProfileStatus extends React.Component<ProfileStatusType, ProfileStatusStateType> {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode = () => {\n        this.setState(\n            {editMode: true}\n        )\n    }\n    deActivateEditMode = () => {\n        this.setState(\n            {editMode: false}\n        )\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (e: any) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfileStatusType>, prevState: Readonly<ProfileStatusStateType>, snapshot?: any) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n\n            <div>\n                {!this.state.editMode &&\n\n                <div>\n\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '------'}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\n                           value={this.state.status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx",["246"],"import {useFormik} from \"formik\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    \"Please inter the symbols\"?: string\r\n}\r\n\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch=useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n\r\n            rememberMe: false\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(login(values.email, values.password, values.rememberMe))\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Password must be at least 3 characters';\r\n            }\r\n\r\n\r\n            return errors;\r\n        }\r\n    });\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            type='email'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {\r\n                            formik.touched.email && formik.errors.email\r\n                                ? <div style={{color: \"red\"}}>{formik.errors.email}</div> : null\r\n                        }\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {\r\n                            formik.touched.password && formik.errors.password\r\n                                ? <div style={{color: \"red\"}}>{formik.errors.password}</div> : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label='Remember me'\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}/>}\r\n                        />\r\n\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx",["247","248","249"],"import React, {DetailedHTMLProps, InputHTMLAttributes, TextareaHTMLAttributes} from \"react\";\nimport {WrappedFieldProps} from \"redux-form\";\nimport styles from './FormsControls.module.css'\n\ntype TextareaType = {}\n\nexport const FormsControls = (Element: string) => ({input, meta, ...props}: WrappedFieldProps &\n    InputHTMLAttributes<HTMLInputElement>) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <>\n            <Element className={meta.touched && meta.error ? styles.error : ''} {...input} {...props}/>\n            {hasError && <span className={styles.formControl}>{meta.error}</span>}\n        </>\n    )\n}\nexport const FormElementInput = FormsControls('input')\nexport const FormElementTextArea = FormsControls('textarea')","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\app-reducer.ts",["250","251","252"],"import {authAPI} from \"../api/api\";\nimport {getUserData} from \"./auth-reducer\";\nimport {Dispatch} from \"redux\";\nimport {AppThunk} from \"./redux-store\";\n\n\nconst SET_INITIALIZED = 'SET-INITIALIZED';\n\nexport type ActionsAppTypes = ReturnType<typeof setInitializedSuccess>\n\n\nexport type InitialStateType = {\n    initialized: boolean\n}\nlet InitialState: InitialStateType = {\n    //userData: {} as UserDataType,\n    initialized: false\n}\nconst appReducer = (state: InitialStateType = InitialState, action: ActionsAppTypes): InitialStateType => {\n    switch (action.type) {\n        case SET_INITIALIZED:\n            return {\n                ...state,\n                initialized: true\n            };\n        default:\n            return state;\n    }\n}\nexport let setInitializedSuccess = () => {\n    return {\n        type: SET_INITIALIZED,\n\n    } as const\n}\nexport const initialize = () =>\n    (dispatch: any) => {\n        dispatch(getUserData())\n            .then(() => {\n                dispatch(setInitializedSuccess())\n\n            })\n    }\nexport default appReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-selectors.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostForm.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\AddMessageForm.tsx",["253"],"import React, {FormEvent} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {FormElementTextArea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nexport const AddMessageForm = (props: InjectedFormProps<FormDataType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newMessageBody'}\r\n                       component={FormElementTextArea}\r\n                       placeholder={'Enter your message'}\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageReduxForm = reduxForm<FormDataType>({\r\n    form: 'addMessageForm'\r\n})(AddMessageForm)","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",["254"],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"255","replacedBy":"259"},{"ruleId":"257","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":22},{"ruleId":"261","severity":1,"message":"265","line":4,"column":31,"nodeType":"263","messageId":"264","endLine":4,"endColumn":50},{"ruleId":"266","severity":1,"message":"267","line":19,"column":13,"nodeType":"268","endLine":20,"endColumn":120},{"ruleId":"261","severity":1,"message":"269","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"261","severity":1,"message":"270","line":5,"column":22,"nodeType":"263","messageId":"264","endLine":5,"endColumn":34},{"ruleId":"261","severity":1,"message":"271","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":27},{"ruleId":"261","severity":1,"message":"272","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},{"ruleId":"261","severity":1,"message":"271","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":27},{"ruleId":"261","severity":1,"message":"273","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"274","line":7,"column":9,"nodeType":"263","messageId":"264","endLine":7,"endColumn":17},{"ruleId":"261","severity":1,"message":"275","line":23,"column":9,"nodeType":"263","messageId":"264","endLine":23,"endColumn":23},{"ruleId":"261","severity":1,"message":"272","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},{"ruleId":"261","severity":1,"message":"276","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"277","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"267","line":24,"column":13,"nodeType":"268","endLine":24,"endColumn":52},{"ruleId":"266","severity":1,"message":"267","line":13,"column":17,"nodeType":"268","endLine":13,"endColumn":71},{"ruleId":"255","replacedBy":"278"},{"ruleId":"257","replacedBy":"279"},{"ruleId":"261","severity":1,"message":"280","line":1,"column":8,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"274","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":21,"column":21,"nodeType":"268","endLine":21,"endColumn":105},{"ruleId":"255","replacedBy":"281"},{"ruleId":"257","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":104,"column":66,"nodeType":"285","messageId":"286","endLine":104,"endColumn":68},{"ruleId":"261","severity":1,"message":"287","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"288","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":13},{"ruleId":"261","severity":1,"message":"289","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":16},{"ruleId":"261","severity":1,"message":"290","line":9,"column":9,"nodeType":"263","messageId":"264","endLine":9,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":45,"column":21,"nodeType":"268","endLine":45,"endColumn":105},{"ruleId":"266","severity":1,"message":"267","line":10,"column":9,"nodeType":"268","endLine":10,"endColumn":31},{"ruleId":"261","severity":1,"message":"288","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":13},{"ruleId":"261","severity":1,"message":"291","line":6,"column":49,"nodeType":"263","messageId":"264","endLine":6,"endColumn":63},{"ruleId":"261","severity":1,"message":"274","line":8,"column":9,"nodeType":"263","messageId":"264","endLine":8,"endColumn":17},{"ruleId":"261","severity":1,"message":"290","line":9,"column":9,"nodeType":"263","messageId":"264","endLine":9,"endColumn":17},{"ruleId":"261","severity":1,"message":"292","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":20},{"ruleId":"261","severity":1,"message":"290","line":2,"column":18,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"293","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":34},{"ruleId":"261","severity":1,"message":"294","line":3,"column":36,"nodeType":"263","messageId":"264","endLine":3,"endColumn":51},{"ruleId":"261","severity":1,"message":"295","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":17},{"ruleId":"261","severity":1,"message":"296","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":20},{"ruleId":"261","severity":1,"message":"297","line":6,"column":19,"nodeType":"263","messageId":"264","endLine":6,"endColumn":28},{"ruleId":"261","severity":1,"message":"272","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},{"ruleId":"261","severity":1,"message":"273","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"298","line":4,"column":17,"nodeType":"263","messageId":"264","endLine":4,"endColumn":27},{"ruleId":"261","severity":1,"message":"288","line":5,"column":8,"nodeType":"263","messageId":"264","endLine":5,"endColumn":13},{"ruleId":"261","severity":1,"message":"299","line":7,"column":9,"nodeType":"263","messageId":"264","endLine":7,"endColumn":20},{"ruleId":"261","severity":1,"message":"300","line":7,"column":22,"nodeType":"263","messageId":"264","endLine":7,"endColumn":38},{"ruleId":"261","severity":1,"message":"301","line":3,"column":18,"nodeType":"263","messageId":"264","endLine":3,"endColumn":29},{"ruleId":"261","severity":1,"message":"274","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":17},{"ruleId":"261","severity":1,"message":"297","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":18},{"ruleId":"261","severity":1,"message":"302","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"272","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},{"ruleId":"303","severity":1,"message":"304","line":63,"column":32,"nodeType":"305","endLine":63,"endColumn":49},{"ruleId":"261","severity":1,"message":"306","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":33},{"ruleId":"261","severity":1,"message":"307","line":1,"column":56,"nodeType":"263","messageId":"264","endLine":1,"endColumn":78},{"ruleId":"261","severity":1,"message":"308","line":5,"column":6,"nodeType":"263","messageId":"264","endLine":5,"endColumn":18},{"ruleId":"261","severity":1,"message":"309","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":16},{"ruleId":"261","severity":1,"message":"295","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"310","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":17},{"ruleId":"261","severity":1,"message":"311","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"272","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],["312"],["313"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'RouteComponentProps' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'updateStatus' is defined but never used.","'ChangeEvent' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'newMessageBody' is assigned a value but never used.","'Prealoder' is defined but never used.","'ProfileStatus' is defined but never used.",["312"],["313"],"'React' is defined but never used.",["312"],["313"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'UsersApiPropsType' is defined but never used.","'axios' is defined but never used.","'inspect' is defined but never used.","'usersAPI' is defined but never used.","'setUserProfile' is defined but never used.","'ProfileType' is defined but never used.","'toggleFollowingIsProgress' is defined but never used.","'unFollowSuccess' is defined but never used.","'Dispatch' is defined but never used.","'ThunkAction' is defined but never used.","'StateType' is defined but never used.","'HeaderType' is defined but never used.","'getUserData' is defined but never used.","'InitialStateType' is defined but never used.","'useDispatch' is defined but never used.","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'DetailedHTMLProps' is defined but never used.","'TextareaHTMLAttributes' is defined but never used.","'TextareaType' is defined but never used.","'authAPI' is defined but never used.","'AppThunk' is defined but never used.","'FormEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]
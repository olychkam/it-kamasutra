[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts":"27","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx":"29","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx":"30","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx":"31","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx":"33","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\addMessageForm.tsx":"34","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\addPostForm.tsx":"35","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts":"36","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx":"37"},{"size":493,"mtime":1614716888412,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1610109245681,"results":"40","hashOfConfig":"39"},{"size":2173,"mtime":1618406003873,"results":"41","hashOfConfig":"39"},{"size":892,"mtime":1618414992563,"results":"42","hashOfConfig":"39"},{"size":1150,"mtime":1615031528153,"results":"43","hashOfConfig":"39"},{"size":740,"mtime":1617735208015,"results":"44","hashOfConfig":"39"},{"size":1414,"mtime":1618237890114,"results":"45","hashOfConfig":"39"},{"size":196,"mtime":1610628172032,"results":"46","hashOfConfig":"39"},{"size":174,"mtime":1613550620148,"results":"47","hashOfConfig":"39"},{"size":1617,"mtime":1618153258393,"results":"48","hashOfConfig":"39"},{"size":204,"mtime":1610628011587,"results":"49","hashOfConfig":"39"},{"size":944,"mtime":1617735232451,"results":"50","hashOfConfig":"39"},{"size":258,"mtime":1614525238843,"results":"51","hashOfConfig":"39"},{"size":395,"mtime":1614525139587,"results":"52","hashOfConfig":"39"},{"size":510,"mtime":1614525364405,"results":"53","hashOfConfig":"39"},{"size":1380,"mtime":1618153298333,"results":"54","hashOfConfig":"39"},{"size":3061,"mtime":1618230791348,"results":"55","hashOfConfig":"39"},{"size":1021,"mtime":1618231519820,"results":"56","hashOfConfig":"39"},{"size":1133,"mtime":1618153298937,"results":"57","hashOfConfig":"39"},{"size":721,"mtime":1617870069922,"results":"58","hashOfConfig":"39"},{"size":1317,"mtime":1615043808474,"results":"59","hashOfConfig":"39"},{"size":5444,"mtime":1617199812033,"results":"60","hashOfConfig":"39"},{"size":4707,"mtime":1617453491441,"results":"61","hashOfConfig":"39"},{"size":2464,"mtime":1617199457519,"results":"62","hashOfConfig":"39"},{"size":255,"mtime":1615815607505,"results":"63","hashOfConfig":"39"},{"size":2208,"mtime":1617790991956,"results":"64","hashOfConfig":"39"},{"size":2360,"mtime":1618415582553,"results":"65","hashOfConfig":"39"},{"size":1147,"mtime":1618414240600,"results":"66","hashOfConfig":"39"},{"size":1454,"mtime":1618396895739,"results":"67","hashOfConfig":"39"},{"size":936,"mtime":1618415213405,"results":"68","hashOfConfig":"39"},{"size":827,"mtime":1617450754766,"results":"69","hashOfConfig":"39"},{"size":1691,"mtime":1617790499720,"results":"70","hashOfConfig":"39"},{"size":1361,"mtime":1618397548535,"results":"71","hashOfConfig":"39"},{"size":972,"mtime":1618260951707,"results":"72","hashOfConfig":"39"},{"size":950,"mtime":1618260951649,"results":"73","hashOfConfig":"39"},{"size":270,"mtime":1618240296545,"results":"74","hashOfConfig":"39"},{"size":767,"mtime":1618312210199,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"ifd9ew",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"78"},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["173","174"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["175","176"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["177","178","179","180","181","182"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["183"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["184","185"],"import React from 'react';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType, updateStatus} from \"../../redux/profile-reducer\";\r\n\r\n\r\ntype ProfileTypes = {\r\n    profile:ProfileType\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n    //posts: Array<PostsType>\r\n    //message: string\r\n    //store:StoreType\r\n    //dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function Profile(props: ProfileTypes){\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["186"],"import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\n\r\nimport {MyPostsType} from \"./MyPostsContainer\";\r\nimport {AddPostReduxForm} from \"./addPostForm\";\r\n\r\n/*export type MyPostsType = {\r\n   posts: Array<PostsType>\r\n   message: string\r\n    //dispatch: (action: ActionsTypes) => void\r\n    changeNewText:(text:string)=>void\r\n    addPost:()=>void\r\n\r\n}*/\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n\r\n    let postsElement = props.profilePage.posts.map\r\n    (p => <Post message={p.message}\r\n                likesCount={p.likesCount}\r\n                id={p.id}\r\n    />)\r\n    let addNewPost = (values: any) => {\r\n        props.addPost(values.messageForNewPost)\r\n\r\n    }\r\n    /*const onAddPost = () => {\r\n        props.addPost()\r\n       // props.dispatch(addPostAC(props.message))\r\n        props.newTextChangeHandler('')\r\n       // props.dispatch(changeNewTextAC(''))\r\n    }\r\n    const newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.newTextChangeHandler(text)\r\n       // props.dispatch(changeNewTextAC(text))\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>Hi</h3>\r\n\r\n            <AddPostReduxForm onSubmit={addNewPost}  />\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["187"],"import React from 'react';\r\nimport s from './News.module.css';\r\ntype NewsType={\r\n    title:string\r\n}\r\nexport function News(props:NewsType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["188","189","190","191"],"import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AddMessageReduxForm} from \"./addMessageForm\";\r\n\r\n\r\n/*export type DialogsPropsType = {\r\n    /!*dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>*!/\r\n    sendMessage: () => void\r\n    //dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    dialogsPage: DialogsPageType\r\n}*/\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\r\n     const addMessage=()=>{\r\n         alert(addMessageRef.current?.value)\r\n     }*/\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["192"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType={\r\n    title:string\r\n}\r\n\r\nexport function Music(props:MusicType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["193","194"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Prealoder from \"../../common/prealoder/Prealoder\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoType={\r\n    profile:ProfileType\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n}\r\n\r\nexport function ProfileInfo(props:ProfileInfoType) {\r\n\r\n    return (\r\n\r\n        <div className={s.content}>\r\n\r\n            {/*<div>\r\n                <img\r\n                    src=\"https://3.bp.blogspot.com/-j5oVTE2TNq8/XGRY4ZDjmyI/AAAAAAAABPU/LC7t1LjCaRMnIo442dZIcX-6s9cYuqNgwCLcBGAs/w1200-h630-p-k-no-nu/Desktop-Wallpaper-4.jpg\"/>\r\n            </div>*/}\r\n            <img src={props.profile.photos.small}/>\r\n            <div className={s.description}>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["195"],"import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PostsType={\r\n    message:string\r\n    likesCount:number\r\n    id:number\r\n}\r\n\r\nexport function Post(props: PostsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}",["196","197"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["198"],"import React from 'react';\r\nimport {addPostAC, InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapDispatchToPropsType={\r\n    addPost:(messageForNewPost:any)=>void\r\n}\r\ntype mapStateToPropsType={\r\n    profilePage:InitialStateType\r\n    messageForNewPost:InitialStateType\r\n\r\n}\r\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        profilePage:state.profilePage,\r\n        messageForNewPost:state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        addPost:(messageForNewPost:any)=>{\r\n            dispatch(addPostAC(messageForNewPost))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["199"],"import React from 'react';\r\nimport {ActionsTypes, InitialStateType, sendMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapDispatchToPropsType = {\r\n\r\n    sendMessage: (newMessageBody:any) => void\r\n}\r\ntype mapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: (action: ActionsTypes) => void): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody:any) => {\r\n            dispatch(sendMessageBodyAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["200"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["201","202"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",["203"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nexport type ActionsTypes = ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unFollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingIsProgress>\r\n\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    status: string | null\r\n    followed: boolean\r\n    name: string\r\n    location: LocationType\r\n    photos: {\r\n        small: string | undefined\r\n        large: string | undefined\r\n    }\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<any>        //?????any\r\n}\r\n\r\nexport let initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let unFollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let setUsers = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n\r\n    } as const\r\n}\r\nexport let setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n\r\n    } as const\r\n}\r\nexport let setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\nexport let setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport let toggleFollowingIsProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const getUsers=(currentPage:any,pageSize:any)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(setToggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage,pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(setToggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\nexport const follow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(false,userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(true,userId))\r\n            })\r\n    }\r\n}\r\nexport const unFollow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(true,userId))\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(false,userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["204","205","206","207","208","209","210"],"import {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    followSuccess,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setToggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFollowingIsProgress, unFollow,\r\n    unFollowSuccess,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport UsersC from \"./Users–°\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport preolader from '../../assets/images/preolader1.gif'\r\nimport Prealoder from \"../common/prealoder/Prealoder\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type mapStateToPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n\r\n}\r\nexport type mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleFollowingIsProgress: (isFetching: boolean, userId: number) => void\r\n    setToggleIsFetching: (isFetching: boolean) => void\r\n    getUsers: (currentPage: any, pageSize: any) => void\r\n}\r\n\r\nexport type UsersApiPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersApiPropsType> {\r\n    /* constructor(props:UsersPropsType) {\r\n         super(props);\r\n         axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n             props.setUsers(response.data.items)\r\n         })\r\n     }*/\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        /* {\r\n             this.props.setToggleIsFetching(true)\r\n         }\r\n         this.props.setCurrentPage(pageNumber);\r\n         usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n                 this.props.setUsers(data.items)\r\n                 {\r\n                     this.props.setToggleIsFetching(false)\r\n                 }\r\n\r\n             })*/\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Prealoder/> : null}\r\n            <UsersC currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    pageSize={this.props.pageSize}\r\n                    setCurrentPage={this.props.setCurrentPage}\r\n                    setTotalUsersCount={this.props.setTotalUsersCount}\r\n                    setUsers={this.props.setUsers}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    unFollow={this.props.unFollow}\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst\r\n    mapStateToProps = (state: StateType): mapStateToPropsType => {\r\n        return {\r\n            users: state.usersPage.users,\r\n            pageSize: state.usersPage.pageSize,\r\n            totalUsersCount: state.usersPage.totalUsersCount,\r\n            currentPage: state.usersPage.currentPage,\r\n            isFetching: state.usersPage.isFetching,\r\n            followingInProgress: state.usersPage.followingInProgress\r\n        }\r\n    }\r\n/*const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollow: (userId: number) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users: Array<UsersType>) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount: number) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        setToggleIsFetchingAC: (isFetching: boolean) => {\r\n            dispatch(setToggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleFollowingIsProgress,\r\n        setToggleIsFetching,\r\n        getUsers\r\n    })\r\n)(UsersContainer)\r\n\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["211","212","213","214","215","216","217"],"import React from 'react';\r\nimport {UsersApiPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\nimport {inspect} from \"util\";\r\nimport {setCurrentPage, setToggleIsFetching, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\nconst UsersC = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ?\r\n\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.follow(u.id)\r\n                        }}>unFollow</button>\r\n\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unFollow(u.id)\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                    <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n                </div>\r\n            )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["218"],"import React from 'react';\r\nimport preolader from \"../../../assets/images/preolader1.gif\";\r\n\r\ntype PrealoderType={\r\n\r\n}\r\n\r\nconst Prealoder=(props:PrealoderType)=>{\r\n    return <div>\r\n        <img src={preolader}/>\r\n    </div>\r\n}\r\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["219","220","221","222"],"import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {getStatus, getUserProfile, ProfileType, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Prealoder from \"../common/prealoder/Prealoder\";\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*type ProfileType = {\r\n    //posts: Array<PostsType>\r\n    //message: string\r\n    //store:StoreType\r\n    //dispatch: (action: ActionsTypes) => void\r\n}*/\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status:string,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus:(status:string)=>void\r\n}\r\n\r\ntype PatchParamsType = {\r\n    userId: string\r\n}\r\ntype onProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype ProfileContainerType = RouteComponentProps<PatchParamsType> & onProfileContainerType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '11025'\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.profile) {\r\n            return <Prealoder/>\r\n        }\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n})\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts",["223","224","225","226","227","228","229"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["230","231","232","233","234"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx",["235","236","237"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx",["238"],"import React, {Component, ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: StateType): mapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsForRedirectType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["239"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\ntype ProfileStatusStateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusType, ProfileStatusStateType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        )\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: any) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusType>, prevState: Readonly<ProfileStatusStateType>, snapshot?: any) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n\r\n                <div>\r\n\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '------'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx",["240"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\addMessageForm.tsx",["241"],"import React, {FormEvent} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {FormElementTextArea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nexport const AddMessageForm = (props: InjectedFormProps<FormDataType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newMessageBody'}\r\n                       component={FormElementTextArea}\r\n                       placeholder={'Enter your message'}\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageReduxForm = reduxForm<FormDataType>({\r\n    form: 'addMessageForm'\r\n})(AddMessageForm)","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\addPostForm.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx",["242","243","244"],"import React, {DetailedHTMLProps, InputHTMLAttributes, TextareaHTMLAttributes} from \"react\";\r\nimport {WrappedFieldProps} from \"redux-form\";\r\nimport styles from './FormsControls.module.css'\r\n\r\ntype TextareaType = {}\r\n\r\nexport const FormsControls = (Element: string) => ({input, meta, ...props}: WrappedFieldProps &\r\n    InputHTMLAttributes<HTMLInputElement>) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <>\r\n            <Element className={meta.touched && meta.error ? styles.error : ''} {...input} {...props}/>\r\n            {hasError && <span className={styles.formControl}>{meta.error}</span>}\r\n        </>\r\n    )\r\n}\r\nexport const FormElementInput = FormsControls('input')\r\nexport const FormElementTextArea = FormsControls('textarea')",{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"245","replacedBy":"249"},{"ruleId":"247","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":3,"column":9,"nodeType":"253","messageId":"254","endLine":3,"endColumn":15},{"ruleId":"251","severity":1,"message":"255","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":16},{"ruleId":"251","severity":1,"message":"256","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":16},{"ruleId":"251","severity":1,"message":"257","line":12,"column":9,"nodeType":"253","messageId":"254","endLine":12,"endColumn":14},{"ruleId":"251","severity":1,"message":"258","line":15,"column":9,"nodeType":"253","messageId":"254","endLine":15,"endColumn":23},{"ruleId":"251","severity":1,"message":"259","line":17,"column":9,"nodeType":"253","messageId":"254","endLine":17,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":17,"column":13,"nodeType":"262","endLine":18,"endColumn":120},{"ruleId":"251","severity":1,"message":"263","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":16},{"ruleId":"251","severity":1,"message":"264","line":5,"column":22,"nodeType":"253","messageId":"254","endLine":5,"endColumn":34},{"ruleId":"251","severity":1,"message":"265","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"266","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":9},{"ruleId":"251","severity":1,"message":"265","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"267","line":3,"column":9,"nodeType":"253","messageId":"254","endLine":3,"endColumn":16},{"ruleId":"251","severity":1,"message":"268","line":7,"column":9,"nodeType":"253","messageId":"254","endLine":7,"endColumn":17},{"ruleId":"251","severity":1,"message":"269","line":23,"column":9,"nodeType":"253","messageId":"254","endLine":23,"endColumn":23},{"ruleId":"251","severity":1,"message":"266","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":9},{"ruleId":"251","severity":1,"message":"270","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":23,"column":13,"nodeType":"262","endLine":23,"endColumn":52},{"ruleId":"260","severity":1,"message":"261","line":13,"column":17,"nodeType":"262","endLine":13,"endColumn":71},{"ruleId":"245","replacedBy":"271"},{"ruleId":"247","replacedBy":"272"},{"ruleId":"251","severity":1,"message":"273","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":13},{"ruleId":"251","severity":1,"message":"268","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":21,"column":21,"nodeType":"262","endLine":21,"endColumn":105},{"ruleId":"245","replacedBy":"274"},{"ruleId":"247","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":103,"column":66,"nodeType":"278","messageId":"279","endLine":103,"endColumn":68},{"ruleId":"251","severity":1,"message":"257","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"280","line":6,"column":5,"nodeType":"253","messageId":"254","endLine":6,"endColumn":18},{"ruleId":"251","severity":1,"message":"281","line":13,"column":5,"nodeType":"253","messageId":"254","endLine":13,"endColumn":20},{"ruleId":"251","severity":1,"message":"282","line":16,"column":18,"nodeType":"253","messageId":"254","endLine":16,"endColumn":26},{"ruleId":"251","severity":1,"message":"283","line":19,"column":8,"nodeType":"253","messageId":"254","endLine":19,"endColumn":13},{"ruleId":"251","severity":1,"message":"284","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":17},{"ruleId":"251","severity":1,"message":"285","line":22,"column":9,"nodeType":"253","messageId":"254","endLine":22,"endColumn":17},{"ruleId":"251","severity":1,"message":"286","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":26},{"ruleId":"251","severity":1,"message":"283","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":13},{"ruleId":"251","severity":1,"message":"287","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":16},{"ruleId":"251","severity":1,"message":"288","line":7,"column":9,"nodeType":"253","messageId":"254","endLine":7,"endColumn":23},{"ruleId":"251","severity":1,"message":"289","line":7,"column":25,"nodeType":"253","messageId":"254","endLine":7,"endColumn":44},{"ruleId":"251","severity":1,"message":"285","line":9,"column":9,"nodeType":"253","messageId":"254","endLine":9,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":45,"column":21,"nodeType":"262","endLine":45,"endColumn":105},{"ruleId":"260","severity":1,"message":"261","line":10,"column":9,"nodeType":"262","endLine":10,"endColumn":31},{"ruleId":"251","severity":1,"message":"283","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":13},{"ruleId":"251","severity":1,"message":"258","line":6,"column":49,"nodeType":"253","messageId":"254","endLine":6,"endColumn":63},{"ruleId":"251","severity":1,"message":"268","line":8,"column":9,"nodeType":"253","messageId":"254","endLine":8,"endColumn":17},{"ruleId":"251","severity":1,"message":"285","line":9,"column":9,"nodeType":"253","messageId":"254","endLine":9,"endColumn":17},{"ruleId":"251","severity":1,"message":"290","line":1,"column":9,"nodeType":"253","messageId":"254","endLine":1,"endColumn":20},{"ruleId":"251","severity":1,"message":"285","line":2,"column":18,"nodeType":"253","messageId":"254","endLine":2,"endColumn":26},{"ruleId":"251","severity":1,"message":"291","line":3,"column":9,"nodeType":"253","messageId":"254","endLine":3,"endColumn":34},{"ruleId":"251","severity":1,"message":"281","line":3,"column":36,"nodeType":"253","messageId":"254","endLine":3,"endColumn":51},{"ruleId":"251","severity":1,"message":"282","line":4,"column":9,"nodeType":"253","messageId":"254","endLine":4,"endColumn":17},{"ruleId":"251","severity":1,"message":"292","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":20},{"ruleId":"251","severity":1,"message":"293","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":18},{"ruleId":"251","severity":1,"message":"266","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":9},{"ruleId":"251","severity":1,"message":"267","line":3,"column":9,"nodeType":"253","messageId":"254","endLine":3,"endColumn":16},{"ruleId":"251","severity":1,"message":"294","line":4,"column":17,"nodeType":"253","messageId":"254","endLine":4,"endColumn":27},{"ruleId":"251","severity":1,"message":"283","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":13},{"ruleId":"251","severity":1,"message":"295","line":7,"column":22,"nodeType":"253","messageId":"254","endLine":7,"endColumn":38},{"ruleId":"251","severity":1,"message":"296","line":3,"column":18,"nodeType":"253","messageId":"254","endLine":3,"endColumn":29},{"ruleId":"251","severity":1,"message":"268","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":17},{"ruleId":"251","severity":1,"message":"293","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":18},{"ruleId":"251","severity":1,"message":"297","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":9},{"ruleId":"251","severity":1,"message":"298","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"298","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"299","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":33},{"ruleId":"251","severity":1,"message":"300","line":1,"column":56,"nodeType":"253","messageId":"254","endLine":1,"endColumn":78},{"ruleId":"251","severity":1,"message":"301","line":5,"column":6,"nodeType":"253","messageId":"254","endLine":5,"endColumn":18},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],["302"],["303"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'Users' is defined but never used.","'setUserProfile' is defined but never used.","'LoginForm' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'updateStatus' is defined but never used.","'ChangeEvent' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'newMessageBody' is assigned a value but never used.","'Prealoder' is defined but never used.",["302"],["303"],"'React' is defined but never used.",["302"],["303"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'followSuccess' is defined but never used.","'unFollowSuccess' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","'preolader' is defined but never used.","'usersAPI' is defined but never used.","'UsersApiPropsType' is defined but never used.","'inspect' is defined but never used.","'setCurrentPage' is defined but never used.","'setToggleIsFetching' is defined but never used.","'ProfileType' is defined but never used.","'toggleFollowingIsProgress' is defined but never used.","'ThunkAction' is defined but never used.","'StateType' is defined but never used.","'HeaderType' is defined but never used.","'InitialStateType' is defined but never used.","'useDispatch' is defined but never used.","'Component' is defined but never used.","'FormEvent' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'TextareaHTMLAttributes' is defined but never used.","'TextareaType' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts":"27","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx":"29","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx":"30","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx":"31","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx":"33","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts":"34","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx":"35","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\app-reducer.ts":"36"},{"size":492,"mtime":1618844329580,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1610109245681,"results":"39","hashOfConfig":"38"},{"size":2824,"mtime":1618847087797,"results":"40","hashOfConfig":"38"},{"size":873,"mtime":1618419015000,"results":"41","hashOfConfig":"38"},{"size":1124,"mtime":1618419015000,"results":"42","hashOfConfig":"38"},{"size":716,"mtime":1618419015000,"results":"43","hashOfConfig":"38"},{"size":1260,"mtime":1618588296657,"results":"44","hashOfConfig":"38"},{"size":187,"mtime":1618419015000,"results":"45","hashOfConfig":"38"},{"size":165,"mtime":1618419015000,"results":"46","hashOfConfig":"38"},{"size":1416,"mtime":1618588296633,"results":"47","hashOfConfig":"38"},{"size":193,"mtime":1618419015000,"results":"48","hashOfConfig":"38"},{"size":915,"mtime":1618419015000,"results":"49","hashOfConfig":"38"},{"size":247,"mtime":1618419015000,"results":"50","hashOfConfig":"38"},{"size":381,"mtime":1618419015000,"results":"51","hashOfConfig":"38"},{"size":489,"mtime":1618419015000,"results":"52","hashOfConfig":"38"},{"size":1326,"mtime":1618419015000,"results":"53","hashOfConfig":"38"},{"size":2940,"mtime":1618419015000,"results":"54","hashOfConfig":"38"},{"size":989,"mtime":1618419015000,"results":"55","hashOfConfig":"38"},{"size":1097,"mtime":1618419015000,"results":"56","hashOfConfig":"38"},{"size":763,"mtime":1618841742665,"results":"57","hashOfConfig":"38"},{"size":1317,"mtime":1615043808474,"results":"58","hashOfConfig":"38"},{"size":5250,"mtime":1618419015000,"results":"59","hashOfConfig":"38"},{"size":4570,"mtime":1618848709890,"results":"60","hashOfConfig":"38"},{"size":2356,"mtime":1618588210097,"results":"61","hashOfConfig":"38"},{"size":245,"mtime":1618588124798,"results":"62","hashOfConfig":"38"},{"size":2224,"mtime":1618848601446,"results":"63","hashOfConfig":"38"},{"size":2782,"mtime":1618834268845,"results":"64","hashOfConfig":"38"},{"size":1148,"mtime":1618760354497,"results":"65","hashOfConfig":"38"},{"size":1415,"mtime":1618588338295,"results":"66","hashOfConfig":"38"},{"size":649,"mtime":1618587356453,"results":"67","hashOfConfig":"38"},{"size":805,"mtime":1618419015000,"results":"68","hashOfConfig":"38"},{"size":1628,"mtime":1618419015000,"results":"69","hashOfConfig":"38"},{"size":3405,"mtime":1618753531289,"results":"70","hashOfConfig":"38"},{"size":264,"mtime":1618419015000,"results":"71","hashOfConfig":"38"},{"size":750,"mtime":1618419015000,"results":"72","hashOfConfig":"38"},{"size":968,"mtime":1618841547626,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ifd9ew",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["171","172"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["173"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["174"],"import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport type HeaderType = {\n    //userData: UserDataType\n    id: number | null\n    login: string | null\n    email: string | null\n    isAuth: boolean\n    logout:()=>void\n\n}\n\nexport function Header(props: HeaderType) {\n    debugger\n    return (\n        <header className={s.header}>\n            <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\n            <div className={s.loginBlock}>\n                {props.isAuth ? <div>{props.login} - <button onClick={()=> {props.logout()}}>Log out</button></div>\n                    :\n                    <NavLink to={'/login'}>\n                        Login\n                    </NavLink>\n                }\n            </div>\n\n        </header>\n    )\n}",["175","176"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["177","178"],"import React from 'react';\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType, updateStatus} from \"../../redux/profile-reducer\";\n\n\ntype ProfileTypes = {\n    profile:ProfileType\n    status:string\n    updateStatus:(status:string)=>void\n    //posts: Array<PostsType>\n    //message: string\n    //store:StoreType\n    //dispatch: (action: ActionsTypes) => void\n}\n\nexport function Profile(props: ProfileTypes){\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostContainer/>\n        </div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["179","180"],"import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\n\nimport {MyPostsType} from \"./MyPostsContainer\";\n\n/*export type MyPostsType = {\n   posts: Array<PostsType>\n   message: string\n    //dispatch: (action: ActionsTypes) => void\n    changeNewText:(text:string)=>void\n    addPost:()=>void\n\n}*/\n\nexport function MyPosts(props: MyPostsType) {\n\n\n    let postsElement = props.profilePage.posts.map\n    (p => <Post message={p.message}\n                likesCount={p.likesCount}\n                id={p.id}\n    />)\n    let addNewPost = (values: any) => {\n        props.addPost(values.messageForNewPost)\n\n    }\n    /*const onAddPost = () => {\n        props.addPost()\n       // props.dispatch(addPostAC(props.message))\n        props.newTextChangeHandler('')\n       // props.dispatch(changeNewTextAC(''))\n    }\n    const newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let text = e.currentTarget.value\n        props.newTextChangeHandler(text)\n       // props.dispatch(changeNewTextAC(text))\n    }*/\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>Hi</h3>\n\n\n            <div className={s.posts}>\n                {postsElement}\n            </div>\n        </div>\n\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["181"],"import React from 'react';\nimport s from './News.module.css';\ntype NewsType={\n    title:string\n}\nexport function News(props:NewsType){\n    return(\n        <div>{props.title}</div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["182","183","184","185","186"],"import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\nimport {Message} from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {Redirect} from 'react-router-dom';\n\n\n/*export type DialogsPropsType = {\n    /!*dialogs: Array<DialogsType>\n    messages: Array<MessagesType>*!/\n    sendMessage: () => void\n    //dispatch: (action: ActionsTypes) => void\n    updateNewMessageBody: (body: string) => void\n    dialogsPage: DialogsPageType\n}*/\n\nexport function Dialogs(props: DialogsPropsType) {\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\n    let newMessageBody = props.dialogsPage.newMessageBody;\n\n\n    let addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n    }\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\n     const addMessage=()=>{\n         alert(addMessageRef.current?.value)\n     }*/\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n\n\n        </div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["187"],"import React from 'react';\nimport s from './Music.module.css';\n\ntype MusicType={\n    title:string\n}\n\nexport function Music(props:MusicType){\n    return(\n        <div>{props.title}</div>\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["188","189"],"import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Prealoder from \"../../common/prealoder/Prealoder\";\nimport {ProfileType} from \"../../../redux/profile-reducer\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\ntype ProfileInfoType={\n    profile:ProfileType\n    status:string\n    updateStatus:(status:string)=>void\n}\n\nexport function ProfileInfo(props:ProfileInfoType) {\n\n    return (\n\n        <div className={s.content}>\n\n            {/*<div>\n                <img\n                    src=\"https://3.bp.blogspot.com/-j5oVTE2TNq8/XGRY4ZDjmyI/AAAAAAAABPU/LC7t1LjCaRMnIo442dZIcX-6s9cYuqNgwCLcBGAs/w1200-h630-p-k-no-nu/Desktop-Wallpaper-4.jpg\"/>\n            </div>*/}\n            <img src={props.profile.photos.small}/>\n            <div className={s.description}>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n\n    )\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["190"],"import React from 'react';\nimport s from './Post.module.css';\ntype PostsType={\n    message:string\n    likesCount:number\n    id:number\n}\n\nexport function Post(props: PostsType) {\n    return (\n        <div>\n            <div className={s.item}>\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\n                {props.message}\n                <div>\n                    <span>Like</span> {props.likesCount}\n                </div>\n            </div>\n        </div>\n\n    )\n}",["191","192"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],["193","194"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["195"],"import React from 'react';\nimport {addPostAC, InitialStateType} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype mapDispatchToPropsType={\n    addPost:(messageForNewPost:any)=>void\n}\ntype mapStateToPropsType={\n    profilePage:InitialStateType\n    messageForNewPost:InitialStateType\n\n}\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\n\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\n    return {\n        profilePage:state.profilePage,\n        messageForNewPost:state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\n    return {\n        addPost:(messageForNewPost:any)=>{\n            dispatch(addPostAC(messageForNewPost))\n        }\n    }\n}\n\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["196"],"import React from 'react';\nimport {ActionsTypes, InitialStateType, sendMessageBodyAC} from \"../../redux/dialogs-reducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype mapDispatchToPropsType = {\n\n    sendMessage: (newMessageBody:any) => void\n}\ntype mapStateToPropsType = {\n    dialogsPage: InitialStateType\n}\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\n\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch: (action: ActionsTypes) => void): mapDispatchToPropsType => {\n    return {\n        sendMessage: (newMessageBody:any) => {\n            dispatch(sendMessageBodyAC(newMessageBody))\n        }\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["197"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["198","199"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",["200"],"import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\n\nexport type ActionsTypes = ReturnType<typeof followSuccess> |\n    ReturnType<typeof unFollowSuccess> |\n    ReturnType<typeof setUsers> |\n    ReturnType<typeof setCurrentPage> |\n    ReturnType<typeof setTotalUsersCount> |\n    ReturnType<typeof setToggleIsFetching> |\n    ReturnType<typeof toggleFollowingIsProgress>\n\n\nexport type LocationType = {\n    city: string\n    country: string\n}\nexport type UsersType = {\n    id: number\n    status: string | null\n    followed: boolean\n    name: string\n    location: LocationType\n    photos: {\n        small: string | undefined\n        large: string | undefined\n    }\n}\n\nexport type InitialStateType = {\n    users: Array<UsersType>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: Array<any>        //?????any\n}\n\nexport let initialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 2,\n    isFetching: true,\n    followingInProgress: []\n}\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\n                    : [state.followingInProgress.filter(id => id != action.userId)]\n            }\n        }\n\n        default:\n            return state;\n    }\n}\nexport let followSuccess = (userId: number) => {\n    return {\n        type: FOLLOW,\n        userId\n\n    } as const\n}\nexport let unFollowSuccess = (userId: number) => {\n    return {\n        type: UNFOLLOW,\n        userId\n\n    } as const\n}\nexport let setUsers = (users: Array<UsersType>) => {\n    return {\n        type: SET_USERS,\n        users\n\n    } as const\n}\nexport let setCurrentPage = (currentPage: number) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage\n\n    } as const\n}\nexport let setTotalUsersCount = (totalCount: number) => {\n    return {\n        type: SET_TOTAL_USERS_COUNT,\n        totalCount\n    } as const\n}\nexport let setToggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    } as const\n}\nexport let toggleFollowingIsProgress = (isFetching: boolean, userId: number) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\n        isFetching,\n        userId\n    } as const\n}\n\nexport const getUsers=(currentPage:any,pageSize:any)=>{\n    return(dispatch:any)=>{\n        dispatch(setToggleIsFetching(true))\n        usersAPI.getUsers(currentPage,pageSize)\n            .then(data => {\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount))\n                dispatch(setToggleIsFetching(false))\n            })\n    }\n}\nexport const follow=(userId:number)=>{\n    return(dispatch:any)=>{\n        dispatch(toggleFollowingIsProgress(false,userId))\n        usersAPI.follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollowSuccess(userId))\n                }\n                dispatch(toggleFollowingIsProgress(true,userId))\n            })\n    }\n}\nexport const unFollow=(userId:number)=>{\n    return(dispatch:any)=>{\n        dispatch(toggleFollowingIsProgress(true,userId))\n        usersAPI.unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(followSuccess(userId))\n                }\n                dispatch(toggleFollowingIsProgress(false,userId))\n            })\n    }\n}\n\nexport default usersReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["201","202","203","204","205","206","207","208"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["209","210","211","212","213"],"import React from 'react';\nimport {UsersApiPropsType} from \"./UsersContainer\";\nimport s from './Users.module.css'\nimport axios from \"axios\";\nimport usersPhoto from '../../assets/images/users.png'\nimport {inspect} from \"util\";\nimport {UsersType} from \"../../redux/users-reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {usersAPI} from \"../../api/api\";\n\nexport type UsersPropsType = {\n    users: Array<UsersType>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    onPageChanged: (pageNumber: number) => void\n    followingInProgress: Array<number>\n}\nconst UsersC = (props: UsersPropsType) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages: Array<number> = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return <div>\n        <div>\n            {pages.map(p => {\n                return <span onClick={(e) => {\n                    props.onPageChanged(p)\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n            <span>\n                <div>\n                    <NavLink to={'/profile' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {u.followed === true ?\n\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.follow(u.id)\n                        }}>unFollow</button>\n\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.unFollow(u.id)\n\n                        }}>Follow</button>\n                    }\n                </div>\n            </span>\n                    <span>\n                 <div>{u.name}</div>\n                <div>{u.status}</div>\n            </span>\n                </div>\n            )}\n    </div>\n}\n\n\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["214","215"],"import React from 'react';\nimport preolader from \"../../../assets/images/preolader1.gif\";\n\ntype PrealoderType={\n\n}\n\nconst Prealoder=(props:PrealoderType)=>{\n    return <div>\n        //<img src={preolader}/>\n    </div>\n}\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["216","217","218","219"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts",["220","221","222","223","224","225","226"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["227","228","229","230","231","232"],"import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {Header, HeaderType} from \"./Header\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getUserData, InitialStateType, logout} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    // userData: UserDataType\n    //state:InitialStateType\n    login: string | null\n    id: number | null\n    email: string | null\n\n\n}\ntype mapDispatchToPropsType = {\n    logout: () => void\n\n\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    // userData: state.auth.userData\n    //state:state.auth\n    login: state.auth.login,\n    id: state.auth.id,\n    email: state.auth.email\n\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx",["233","234","235"],"import React from 'react';\nimport {LoginForm} from \"./LoginForm\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {login} from '../../redux/auth-reducer';\nimport {Redirect} from 'react-router-dom';\nimport {StateType} from \"../../redux/redux-store\";\n\ntype LoginType = {\n    login: (login: string, password: string, rememberMe: boolean) => void\n}\nconst Login = (props: LoginType) => {\n    //let dispatch = useDispatch()\n\n    /* if (props.isAuth) {\n         return <Redirect to={'/profile'}/>\n     }*/\n    return <div>\n        <h1>Login</h1>\n      <LoginForm/>\n    </div>\n}\n\nexport default connect(null, {login})(Login)\n//export default Login\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx",["236"],"import React, {Component, ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {StateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStateToPropsForRedirect = (state: StateType): mapStateToPropsForRedirectType => ({\n    isAuth: state.auth.isAuth\n})\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: mapStateToPropsForRedirectType) => {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["237"],"import React from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\ntype ProfileStatusStateType = {\n    editMode: boolean\n    status: string\n}\n\nexport class ProfileStatus extends React.Component<ProfileStatusType, ProfileStatusStateType> {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode = () => {\n        this.setState(\n            {editMode: true}\n        )\n    }\n    deActivateEditMode = () => {\n        this.setState(\n            {editMode: false}\n        )\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (e: any) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfileStatusType>, prevState: Readonly<ProfileStatusStateType>, snapshot?: any) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n\n            <div>\n                {!this.state.editMode &&\n\n                <div>\n\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '------'}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\n                           value={this.state.status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\LoginForm.tsx",["238"],"import {useFormik} from \"formik\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    \"Please inter the symbols\"?: string\r\n}\r\n\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch=useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n\r\n            rememberMe: false\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(login(values.email, values.password, values.rememberMe))\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Password must be at least 3 characters';\r\n            }\r\n\r\n\r\n            return errors;\r\n        }\r\n    });\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            type='email'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {\r\n                            formik.touched.email && formik.errors.email\r\n                                ? <div style={{color: \"red\"}}>{formik.errors.email}</div> : null\r\n                        }\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {\r\n                            formik.touched.password && formik.errors.password\r\n                                ? <div style={{color: \"red\"}}>{formik.errors.password}</div> : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label='Remember me'\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}/>}\r\n                        />\r\n\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\validators\\validators.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\formsControls\\FormsControls.tsx",["239","240","241"],"import React, {DetailedHTMLProps, InputHTMLAttributes, TextareaHTMLAttributes} from \"react\";\nimport {WrappedFieldProps} from \"redux-form\";\nimport styles from './FormsControls.module.css'\n\ntype TextareaType = {}\n\nexport const FormsControls = (Element: string) => ({input, meta, ...props}: WrappedFieldProps &\n    InputHTMLAttributes<HTMLInputElement>) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <>\n            <Element className={meta.touched && meta.error ? styles.error : ''} {...input} {...props}/>\n            {hasError && <span className={styles.formControl}>{meta.error}</span>}\n        </>\n    )\n}\nexport const FormElementInput = FormsControls('input')\nexport const FormElementTextArea = FormsControls('textarea')","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\app-reducer.ts",["242"],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":4,"column":31,"nodeType":"249","messageId":"250","endLine":4,"endColumn":50},{"ruleId":"251","severity":1,"message":"252","line":19,"column":13,"nodeType":"253","endLine":20,"endColumn":120},{"ruleId":"243","replacedBy":"254"},{"ruleId":"245","replacedBy":"255"},{"ruleId":"247","severity":1,"message":"256","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"247","severity":1,"message":"257","line":5,"column":22,"nodeType":"249","messageId":"250","endLine":5,"endColumn":34},{"ruleId":"247","severity":1,"message":"258","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"259","line":24,"column":9,"nodeType":"249","messageId":"250","endLine":24,"endColumn":19},{"ruleId":"247","severity":1,"message":"260","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":9},{"ruleId":"247","severity":1,"message":"258","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"261","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":16},{"ruleId":"247","severity":1,"message":"262","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":17},{"ruleId":"247","severity":1,"message":"263","line":22,"column":9,"nodeType":"249","messageId":"250","endLine":22,"endColumn":23},{"ruleId":"247","severity":1,"message":"264","line":25,"column":9,"nodeType":"249","messageId":"250","endLine":25,"endColumn":22},{"ruleId":"247","severity":1,"message":"260","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":9},{"ruleId":"247","severity":1,"message":"265","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":23,"column":13,"nodeType":"253","endLine":23,"endColumn":52},{"ruleId":"251","severity":1,"message":"252","line":13,"column":17,"nodeType":"253","endLine":13,"endColumn":71},{"ruleId":"243","replacedBy":"266"},{"ruleId":"245","replacedBy":"267"},{"ruleId":"243","replacedBy":"268"},{"ruleId":"245","replacedBy":"269"},{"ruleId":"247","severity":1,"message":"270","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":13},{"ruleId":"247","severity":1,"message":"262","line":6,"column":9,"nodeType":"249","messageId":"250","endLine":6,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":21,"column":21,"nodeType":"253","endLine":21,"endColumn":105},{"ruleId":"243","replacedBy":"271"},{"ruleId":"245","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":103,"column":66,"nodeType":"275","messageId":"276","endLine":103,"endColumn":68},{"ruleId":"247","severity":1,"message":"277","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"278","line":6,"column":5,"nodeType":"249","messageId":"250","endLine":6,"endColumn":18},{"ruleId":"247","severity":1,"message":"279","line":13,"column":5,"nodeType":"249","messageId":"250","endLine":13,"endColumn":20},{"ruleId":"247","severity":1,"message":"280","line":16,"column":18,"nodeType":"249","messageId":"250","endLine":16,"endColumn":26},{"ruleId":"247","severity":1,"message":"281","line":19,"column":8,"nodeType":"249","messageId":"250","endLine":19,"endColumn":13},{"ruleId":"247","severity":1,"message":"282","line":20,"column":8,"nodeType":"249","messageId":"250","endLine":20,"endColumn":17},{"ruleId":"247","severity":1,"message":"283","line":22,"column":9,"nodeType":"249","messageId":"250","endLine":22,"endColumn":17},{"ruleId":"247","severity":1,"message":"284","line":23,"column":9,"nodeType":"249","messageId":"250","endLine":23,"endColumn":25},{"ruleId":"247","severity":1,"message":"285","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"281","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"247","severity":1,"message":"286","line":6,"column":9,"nodeType":"249","messageId":"250","endLine":6,"endColumn":16},{"ruleId":"247","severity":1,"message":"283","line":9,"column":9,"nodeType":"249","messageId":"250","endLine":9,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":45,"column":21,"nodeType":"253","endLine":45,"endColumn":105},{"ruleId":"287","severity":1,"message":"288","line":9,"column":17,"nodeType":"289","endLine":10,"endColumn":11},{"ruleId":"251","severity":1,"message":"252","line":10,"column":11,"nodeType":"253","endLine":10,"endColumn":33},{"ruleId":"247","severity":1,"message":"281","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"290","line":6,"column":49,"nodeType":"249","messageId":"250","endLine":6,"endColumn":63},{"ruleId":"247","severity":1,"message":"262","line":8,"column":9,"nodeType":"249","messageId":"250","endLine":8,"endColumn":17},{"ruleId":"247","severity":1,"message":"283","line":9,"column":9,"nodeType":"249","messageId":"250","endLine":9,"endColumn":17},{"ruleId":"247","severity":1,"message":"291","line":1,"column":9,"nodeType":"249","messageId":"250","endLine":1,"endColumn":20},{"ruleId":"247","severity":1,"message":"283","line":2,"column":18,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"292","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":34},{"ruleId":"247","severity":1,"message":"279","line":3,"column":36,"nodeType":"249","messageId":"250","endLine":3,"endColumn":51},{"ruleId":"247","severity":1,"message":"280","line":4,"column":9,"nodeType":"249","messageId":"250","endLine":4,"endColumn":17},{"ruleId":"247","severity":1,"message":"293","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":20},{"ruleId":"247","severity":1,"message":"294","line":6,"column":9,"nodeType":"249","messageId":"250","endLine":6,"endColumn":18},{"ruleId":"247","severity":1,"message":"260","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":9},{"ruleId":"247","severity":1,"message":"261","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":16},{"ruleId":"247","severity":1,"message":"295","line":4,"column":17,"nodeType":"249","messageId":"250","endLine":4,"endColumn":27},{"ruleId":"247","severity":1,"message":"281","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":13},{"ruleId":"247","severity":1,"message":"296","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":20},{"ruleId":"247","severity":1,"message":"297","line":7,"column":22,"nodeType":"249","messageId":"250","endLine":7,"endColumn":38},{"ruleId":"247","severity":1,"message":"298","line":3,"column":18,"nodeType":"249","messageId":"250","endLine":3,"endColumn":29},{"ruleId":"247","severity":1,"message":"262","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":17},{"ruleId":"247","severity":1,"message":"294","line":6,"column":9,"nodeType":"249","messageId":"250","endLine":6,"endColumn":18},{"ruleId":"247","severity":1,"message":"299","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"260","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":9},{"ruleId":"300","severity":1,"message":"301","line":63,"column":32,"nodeType":"302","endLine":63,"endColumn":49},{"ruleId":"247","severity":1,"message":"303","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":33},{"ruleId":"247","severity":1,"message":"304","line":1,"column":56,"nodeType":"249","messageId":"250","endLine":1,"endColumn":78},{"ruleId":"247","severity":1,"message":"305","line":5,"column":6,"nodeType":"249","messageId":"250","endLine":5,"endColumn":18},{"ruleId":"247","severity":1,"message":"306","line":1,"column":9,"nodeType":"249","messageId":"250","endLine":1,"endColumn":16},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"@typescript-eslint/no-unused-vars","'RouteComponentProps' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["307"],["308"],"'MyPosts' is defined but never used.","'updateStatus' is defined but never used.","'ChangeEvent' is defined but never used.","'addNewPost' is assigned a value but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'newMessageBody' is assigned a value but never used.","'addNewMessage' is assigned a value but never used.","'Prealoder' is defined but never used.",["307"],["308"],["307"],["308"],"'React' is defined but never used.",["307"],["308"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Users' is defined but never used.","'followSuccess' is defined but never used.","'unFollowSuccess' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","'preolader' is defined but never used.","'usersAPI' is defined but never used.","'withAuthRedirect' is defined but never used.","'UsersApiPropsType' is defined but never used.","'inspect' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'setUserProfile' is defined but never used.","'ProfileType' is defined but never used.","'toggleFollowingIsProgress' is defined but never used.","'ThunkAction' is defined but never used.","'StateType' is defined but never used.","'HeaderType' is defined but never used.","'getUserData' is defined but never used.","'InitialStateType' is defined but never used.","'useDispatch' is defined but never used.","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'DetailedHTMLProps' is defined but never used.","'TextareaHTMLAttributes' is defined but never used.","'TextareaType' is defined but never used.","'authAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]
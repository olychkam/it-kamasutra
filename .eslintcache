[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"25","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx":"26","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"27","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts":"28","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"29","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx":"30","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx":"31","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx":"32","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"33"},{"size":493,"mtime":1614716888412,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1610109245681,"results":"36","hashOfConfig":"35"},{"size":2119,"mtime":1617280451069,"results":"37","hashOfConfig":"35"},{"size":747,"mtime":1616171195708,"results":"38","hashOfConfig":"35"},{"size":1150,"mtime":1615031528153,"results":"39","hashOfConfig":"35"},{"size":611,"mtime":1615886932934,"results":"40","hashOfConfig":"35"},{"size":1551,"mtime":1614715707935,"results":"41","hashOfConfig":"35"},{"size":196,"mtime":1610628172032,"results":"42","hashOfConfig":"35"},{"size":174,"mtime":1613550620148,"results":"43","hashOfConfig":"35"},{"size":1926,"mtime":1617283982255,"results":"44","hashOfConfig":"35"},{"size":204,"mtime":1610628011587,"results":"45","hashOfConfig":"35"},{"size":855,"mtime":1617458841384,"results":"46","hashOfConfig":"35"},{"size":258,"mtime":1614525238843,"results":"47","hashOfConfig":"35"},{"size":395,"mtime":1614525139587,"results":"48","hashOfConfig":"35"},{"size":510,"mtime":1614525364405,"results":"49","hashOfConfig":"35"},{"size":1734,"mtime":1614769824477,"results":"50","hashOfConfig":"35"},{"size":2709,"mtime":1617207220224,"results":"51","hashOfConfig":"35"},{"size":2349,"mtime":1614524625350,"results":"52","hashOfConfig":"35"},{"size":2256,"mtime":1614772423096,"results":"53","hashOfConfig":"35"},{"size":1262,"mtime":1617453491282,"results":"54","hashOfConfig":"35"},{"size":636,"mtime":1616858180654,"results":"55","hashOfConfig":"35"},{"size":1317,"mtime":1615043808474,"results":"56","hashOfConfig":"35"},{"size":5444,"mtime":1617199812033,"results":"57","hashOfConfig":"35"},{"size":4707,"mtime":1617453491441,"results":"58","hashOfConfig":"35"},{"size":2464,"mtime":1617199457519,"results":"59","hashOfConfig":"35"},{"size":255,"mtime":1615815607505,"results":"60","hashOfConfig":"35"},{"size":1861,"mtime":1617453491390,"results":"61","hashOfConfig":"35"},{"size":1360,"mtime":1617207912436,"results":"62","hashOfConfig":"35"},{"size":1007,"mtime":1617286792691,"results":"63","hashOfConfig":"35"},{"size":862,"mtime":1617206606220,"results":"64","hashOfConfig":"35"},{"size":122,"mtime":1617280144916,"results":"65","hashOfConfig":"35"},{"size":827,"mtime":1617450754766,"results":"66","hashOfConfig":"35"},{"size":977,"mtime":1617458861015,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ifd9ew",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["153","154"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["155","156"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["157","158","159","160","161"],"import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Users} from \"./components/Users/Users\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport {setUserProfile} from \"./redux/profile-reducer\";\nimport {Login} from \"./components/Login/Login\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\ntype AppPropsType = {\n   // store: StoreType\n}\n\nfunction App(props: AppPropsType) {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route exact path=\"/dialogs\" render={() =>\n                    <DialogsContainer/>\n                    }/>\n                    <Route exact path={'/profile:userId?'} render={() =>\n                        <ProfileContainer /*store={props.store}*/ /*message={state.profilePage.messageForNewPost}*/\n                            /*dispatch={props.store.dispatch.bind(props.store)}*/\n                        />}/>\n\n                    <Route exact path=\"/music\" render={() => <Music title={'Music'}/>}/>\n                    <Route exact path=\"/news\" render={() => <News title={'News'}/>}/>\n                    <Route exact path=\"/settings\" render={() => <Settings title={'Settings'}/>}/>\n                    <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route exact path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["162"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderType = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Header(props: HeaderType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.data.login :\r\n                    <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["163"],"import React from 'react';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\n\r\ntype ProfileTypes = {\r\n    profile:ProfileType\r\n    //posts: Array<PostsType>\r\n    //message: string\r\n    //store:StoreType\r\n    //dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function Profile(props: ProfileTypes){\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["164"],"import React from 'react';\r\nimport s from './News.module.css';\r\ntype NewsType={\r\n    title:string\r\n}\r\nexport function News(props:NewsType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["165","166"],"import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n/*export type DialogsPropsType = {\r\n    /!*dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>*!/\r\n    sendMessage: () => void\r\n    //dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    dialogsPage: DialogsPageType\r\n}*/\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body);\r\n    }\r\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\r\n     const addMessage=()=>{\r\n         alert(addMessageRef.current?.value)\r\n     }*/\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea value={newMessageBody}\r\n                          onChange={onNewMessageChange}\r\n                          placeholder='Enter your message'></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>addMessage</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["167"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType={\r\n    title:string\r\n}\r\n\r\nexport function Music(props:MusicType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["168","169"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],["170","171"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["172"],"import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PostsType={\r\n    message:string\r\n    likesCount:number\r\n    id:number\r\n}\r\n\r\nexport function Post(props: PostsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["173"],"import React from 'react';\r\nimport {addPostAC, changeNewTextAC, InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*\r\nexport type MyPostsContainerType = {}\r\n\r\nexport function MyPostsContainer(props: MyPostsContainerType) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    const addPost = () => {\r\n                        store.dispatch(addPostAC(store._state.profilePage.messageForNewPost))\r\n                        store.dispatch(changeNewTextAC(''))\r\n                    }\r\n                    const newTextChangeHandler = (text: string) => {\r\n                        store.dispatch(changeNewTextAC(text))\r\n                    }\r\n                    return (\r\n\r\n                        <div className={s.postsBlock}>\r\n                            <MyPosts changeNewText={newTextChangeHandler} addPost={addPost}\r\n                                     posts={state.profilePage.posts}\r\n                                     message={store._state.profilePage.messageForNewPost}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    )\r\n}\r\n*/\r\ntype mapDispatchToPropsType={\r\n    newTextChangeHandler:(newText:string)=>void\r\n    addPost:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    profilePage:InitialStateType\r\n    messageForNewPost:InitialStateType\r\n\r\n}\r\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        profilePage:state.profilePage,\r\n        messageForNewPost:state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        addPost:()=>{\r\n            dispatch(addPostAC())\r\n        },\r\n        newTextChangeHandler:(newText:string)=>{\r\n            dispatch(changeNewTextAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["174"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["175"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}",["176","177"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",["178"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nexport type ActionsTypes = ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unFollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingIsProgress>\r\n\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    status: string | null\r\n    followed: boolean\r\n    name: string\r\n    location: LocationType\r\n    photos: {\r\n        small: string | undefined\r\n        large: string | undefined\r\n    }\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<any>        //?????any\r\n}\r\n\r\nexport let initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let unFollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport let setUsers = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n\r\n    } as const\r\n}\r\nexport let setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n\r\n    } as const\r\n}\r\nexport let setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\nexport let setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport let toggleFollowingIsProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const getUsers=(currentPage:any,pageSize:any)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(setToggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage,pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(setToggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\nexport const follow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(false,userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(true,userId))\r\n            })\r\n    }\r\n}\r\nexport const unFollow=(userId:number)=>{\r\n    return(dispatch:any)=>{\r\n        dispatch(toggleFollowingIsProgress(true,userId))\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingIsProgress(false,userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["179","180","181","182","183","184","185"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["186","187","188","189","190","191","192"],"import React from 'react';\r\nimport {UsersApiPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\nimport {inspect} from \"util\";\r\nimport {setCurrentPage, setToggleIsFetching, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\nconst UsersC = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ?\r\n\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.follow(u.id)\r\n                        }}>unFollow</button>\r\n\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unFollow(u.id)\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                    <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n                </div>\r\n            )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default UsersC;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\common\\prealoder\\Prealoder.tsx",["193"],"import React from 'react';\r\nimport preolader from \"../../../assets/images/preolader1.gif\";\r\n\r\ntype PrealoderType={\r\n\r\n}\r\n\r\nconst Prealoder=(props:PrealoderType)=>{\r\n    return <div>\r\n        <img src={preolader}/>\r\n    </div>\r\n}\r\nexport default Prealoder;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["194","195","196","197"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\auth-reducer.ts",["198","199","200","201"],"import {ProfileType} from \"./profile-reducer\";\r\nimport {authAPI, usersAPI} from \"../api/api\";\r\nimport {toggleFollowingIsProgress, unFollowSuccess} from \"./users-reducer\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nexport type ActionsTypes = ReturnType<typeof setUserData>\r\n\r\nexport type UserDataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n}\r\n\r\nexport type InitialStateType = {\r\n    data:UserDataType,\r\n    isAuth:boolean\r\n}\r\nlet InitialState:InitialStateType={\r\n    data:{} as UserDataType,\r\n    isAuth:false\r\n}\r\n\r\n\r\nconst authReducer = (state: InitialStateType=InitialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data:{...action.data,...state.data},\r\n                //...action.data,\r\n                isAuth:true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let setUserData = (data: UserDataType) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data\r\n    } as const\r\n}\r\nexport const getUserData=()=>(dispatch:any)=>{\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n\r\n                dispatch(setUserData(response.data.data))\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport default authReducer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["202","203","204"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Header} from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserData, UserDataType} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    data: UserDataType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUserData: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUserData()    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    data: state.auth.data\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUserData})(HeaderContainer);","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\api\\api.tsx",["205"],"import axios from \"axios\";\r\nimport {UserDataType} from \"../redux/auth-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': 'bac44229-6d89-4751-9bb8-e457dc22d531'\r\n    }\r\n})\r\nexport const usersAPI={\r\n    getUsers(pageNumber = 1, pageSize = 10){\r\n        return instance.get(`users?page=${pageNumber}&\r\n        count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId:number){\r\n      return instance.delete(`follow/${userId}`)\r\n    },\r\n    unFollow(userId:number){\r\n        return instance.post(`follow/${userId}`, {}, )\r\n    },\r\n    getProfile(userId:string){\r\n        return instance.get(`profile/`+userId)\r\n    }\r\n}\r\nexport const authAPI={\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n\r\n\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\hoc\\withAuthRedirect.tsx",["206"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"208","replacedBy":"212"},{"ruleId":"210","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":15},{"ruleId":"214","severity":1,"message":"218","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":16},{"ruleId":"214","severity":1,"message":"219","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":16},{"ruleId":"214","severity":1,"message":"220","line":12,"column":9,"nodeType":"216","messageId":"217","endLine":12,"endColumn":14},{"ruleId":"214","severity":1,"message":"221","line":15,"column":9,"nodeType":"216","messageId":"217","endLine":15,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":14,"column":13,"nodeType":"224","endLine":15,"endColumn":120},{"ruleId":"214","severity":1,"message":"225","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"226","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},{"ruleId":"214","severity":1,"message":"227","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"214","severity":1,"message":"228","line":7,"column":9,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"226","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},{"ruleId":"214","severity":1,"message":"229","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":21,"column":13,"nodeType":"224","endLine":21,"endColumn":52},{"ruleId":"208","replacedBy":"230"},{"ruleId":"210","replacedBy":"231"},{"ruleId":"222","severity":1,"message":"223","line":13,"column":17,"nodeType":"224","endLine":13,"endColumn":71},{"ruleId":"214","severity":1,"message":"232","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"228","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":21,"column":21,"nodeType":"224","endLine":21,"endColumn":105},{"ruleId":"208","replacedBy":"233"},{"ruleId":"210","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":103,"column":66,"nodeType":"237","messageId":"238","endLine":103,"endColumn":68},{"ruleId":"214","severity":1,"message":"220","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"239","line":6,"column":5,"nodeType":"216","messageId":"217","endLine":6,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":13,"column":5,"nodeType":"216","messageId":"217","endLine":13,"endColumn":20},{"ruleId":"214","severity":1,"message":"241","line":16,"column":18,"nodeType":"216","messageId":"217","endLine":16,"endColumn":26},{"ruleId":"214","severity":1,"message":"242","line":19,"column":8,"nodeType":"216","messageId":"217","endLine":19,"endColumn":13},{"ruleId":"214","severity":1,"message":"243","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":17},{"ruleId":"214","severity":1,"message":"244","line":22,"column":9,"nodeType":"216","messageId":"217","endLine":22,"endColumn":17},{"ruleId":"214","severity":1,"message":"245","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":26},{"ruleId":"214","severity":1,"message":"242","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"246","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":16},{"ruleId":"214","severity":1,"message":"247","line":7,"column":9,"nodeType":"216","messageId":"217","endLine":7,"endColumn":23},{"ruleId":"214","severity":1,"message":"248","line":7,"column":25,"nodeType":"216","messageId":"217","endLine":7,"endColumn":44},{"ruleId":"214","severity":1,"message":"244","line":9,"column":9,"nodeType":"216","messageId":"217","endLine":9,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":45,"column":21,"nodeType":"224","endLine":45,"endColumn":105},{"ruleId":"222","severity":1,"message":"223","line":10,"column":9,"nodeType":"224","endLine":10,"endColumn":31},{"ruleId":"214","severity":1,"message":"242","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"221","line":6,"column":38,"nodeType":"216","messageId":"217","endLine":6,"endColumn":52},{"ruleId":"214","severity":1,"message":"228","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":17},{"ruleId":"214","severity":1,"message":"244","line":9,"column":9,"nodeType":"216","messageId":"217","endLine":9,"endColumn":17},{"ruleId":"214","severity":1,"message":"249","line":1,"column":9,"nodeType":"216","messageId":"217","endLine":1,"endColumn":20},{"ruleId":"214","severity":1,"message":"244","line":2,"column":18,"nodeType":"216","messageId":"217","endLine":2,"endColumn":26},{"ruleId":"214","severity":1,"message":"250","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":34},{"ruleId":"214","severity":1,"message":"240","line":3,"column":36,"nodeType":"216","messageId":"217","endLine":3,"endColumn":51},{"ruleId":"214","severity":1,"message":"226","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},{"ruleId":"214","severity":1,"message":"227","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"214","severity":1,"message":"242","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"251","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"252","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"226","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],["253"],["254"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'Users' is defined but never used.","'setUserProfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Prealoder' is defined but never used.",["253"],["254"],"'React' is defined but never used.",["253"],["254"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'followSuccess' is defined but never used.","'unFollowSuccess' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","'preolader' is defined but never used.","'usersAPI' is defined but never used.","'UsersApiPropsType' is defined but never used.","'inspect' is defined but never used.","'setCurrentPage' is defined but never used.","'setToggleIsFetching' is defined but never used.","'ProfileType' is defined but never used.","'toggleFollowingIsProgress' is defined but never used.","'UserDataType' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]
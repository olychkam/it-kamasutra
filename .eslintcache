[{"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx":"1","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts":"2","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx":"3","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx":"6","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx":"8","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx":"9","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx":"11","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"14","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"15","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts":"16","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts":"18","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"20","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts":"21","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx":"22","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts":"23","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx":"24","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx":"25"},{"size":493,"mtime":1614716888412,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1610109245681,"results":"28","hashOfConfig":"27"},{"size":1777,"mtime":1614865649868,"results":"29","hashOfConfig":"27"},{"size":327,"mtime":1610127150587,"results":"30","hashOfConfig":"27"},{"size":1150,"mtime":1615031528153,"results":"31","hashOfConfig":"27"},{"size":503,"mtime":1614585510623,"results":"32","hashOfConfig":"27"},{"size":1551,"mtime":1614715707935,"results":"33","hashOfConfig":"27"},{"size":196,"mtime":1610628172032,"results":"34","hashOfConfig":"27"},{"size":174,"mtime":1613550620148,"results":"35","hashOfConfig":"27"},{"size":1882,"mtime":1614525073039,"results":"36","hashOfConfig":"27"},{"size":204,"mtime":1610628011587,"results":"37","hashOfConfig":"27"},{"size":492,"mtime":1610637585692,"results":"38","hashOfConfig":"27"},{"size":258,"mtime":1614525238843,"results":"39","hashOfConfig":"27"},{"size":395,"mtime":1614525139587,"results":"40","hashOfConfig":"27"},{"size":510,"mtime":1614525364405,"results":"41","hashOfConfig":"27"},{"size":1734,"mtime":1614769824477,"results":"42","hashOfConfig":"27"},{"size":1576,"mtime":1614769551497,"results":"43","hashOfConfig":"27"},{"size":2349,"mtime":1614524625350,"results":"44","hashOfConfig":"27"},{"size":2256,"mtime":1614772423096,"results":"45","hashOfConfig":"27"},{"size":1089,"mtime":1614588930625,"results":"46","hashOfConfig":"27"},{"size":476,"mtime":1614858045657,"results":"47","hashOfConfig":"27"},{"size":1317,"mtime":1615043808474,"results":"48","hashOfConfig":"27"},{"size":2027,"mtime":1615042775621,"results":"49","hashOfConfig":"27"},{"size":1237,"mtime":1615126679431,"results":"50","hashOfConfig":"27"},{"size":1565,"mtime":1615126679463,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ifd9ew",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\index.tsx",[],["115","116"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\reportWebVitals.ts",[],["117","118"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\App.tsx",["119","120"],"import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Users} from \"./components/Users/Users\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\ntype AppPropsType = {\n   // store: StoreType\n}\n\nfunction App(props: AppPropsType) {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route exact path=\"/dialogs\" render={() =>\n                    <DialogsContainer/>\n                    }/>\n                    <Route exact path=\"/profile\" render={() =>\n                        <Profile /*store={props.store}*/ /*message={state.profilePage.messageForNewPost}*/\n                            /*dispatch={props.store.dispatch.bind(props.store)}*/\n                        />}/>\n\n                    <Route exact path=\"/music\" render={() => <Music title={'Music'}/>}/>\n                    <Route exact path=\"/news\" render={() => <News title={'News'}/>}/>\n                    <Route exact path=\"/settings\" render={() => <Settings title={'Settings'}/>}/>\n                    <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Header\\Header.tsx",["121"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nexport function Header(){\r\n    return(\r\n            <header className={s.header}>\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\"/>\r\n            </header>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\Profile.tsx",["122"],"import React from 'react';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\ntype ProfileType = {\r\n    //posts: Array<PostsType>\r\n    //message: string\r\n    //store:StoreType\r\n    //dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function Profile(props: ProfileType) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\News\\News.tsx",["123"],"import React from 'react';\r\nimport s from './News.module.css';\r\ntype NewsType={\r\n    title:string\r\n}\r\nexport function News(props:NewsType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Settings\\Settings.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["124"],"import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\n/*export type DialogsPropsType = {\r\n    /!*dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>*!/\r\n    sendMessage: () => void\r\n    //dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    dialogsPage: DialogsPageType\r\n}*/\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body);\r\n    }\r\n    /* let addMessageRef=React.createRef<HTMLTextAreaElement>()\r\n     const addMessage=()=>{\r\n         alert(addMessageRef.current?.value)\r\n     }*/\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea value={newMessageBody}\r\n                          onChange={onNewMessageChange}\r\n                          placeholder='Enter your message'></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>addMessage</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Music\\Music.tsx",["125"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType={\r\n    title:string\r\n}\r\n\r\nexport function Music(props:MusicType){\r\n    return(\r\n        <div>{props.title}</div>\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["126"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <img\r\n                    src=\"https://3.bp.blogspot.com/-j5oVTE2TNq8/XGRY4ZDjmyI/AAAAAAAABPU/LC7t1LjCaRMnIo442dZIcX-6s9cYuqNgwCLcBGAs/w1200-h630-p-k-no-nu/Desktop-Wallpaper-4.jpg\"/>\r\n            </div>\r\n            <div className={s.description}>ava+description</div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["127"],"import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PostsType={\r\n    message:string\r\n    likesCount:number\r\n    id:number\r\n}\r\n\r\nexport function Post(props: PostsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://www.1zoom.ru/prev2/330/329183.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["128"],"import React from 'react';\r\nimport {addPostAC, changeNewTextAC, InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*\r\nexport type MyPostsContainerType = {}\r\n\r\nexport function MyPostsContainer(props: MyPostsContainerType) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    const addPost = () => {\r\n                        store.dispatch(addPostAC(store._state.profilePage.messageForNewPost))\r\n                        store.dispatch(changeNewTextAC(''))\r\n                    }\r\n                    const newTextChangeHandler = (text: string) => {\r\n                        store.dispatch(changeNewTextAC(text))\r\n                    }\r\n                    return (\r\n\r\n                        <div className={s.postsBlock}>\r\n                            <MyPosts changeNewText={newTextChangeHandler} addPost={addPost}\r\n                                     posts={state.profilePage.posts}\r\n                                     message={store._state.profilePage.messageForNewPost}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    )\r\n}\r\n*/\r\ntype mapDispatchToPropsType={\r\n    newTextChangeHandler:(newText:string)=>void\r\n    addPost:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    profilePage:InitialStateType\r\n    messageForNewPost:InitialStateType\r\n\r\n}\r\nexport type MyPostsType=mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        profilePage:state.profilePage,\r\n        messageForNewPost:state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        addPost:()=>{\r\n            dispatch(addPostAC())\r\n        },\r\n        newTextChangeHandler:(newText:string)=>{\r\n            dispatch(changeNewTextAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostContainer;","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["129"],"import React from 'react';\r\nimport {ActionsTypes, InitialStateType, sendMessageBodyAC, updateNewMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype mapDispatchToPropsType={\r\n    updateNewMessageBody:(body:string)=>void\r\n    sendMessage:()=>void\r\n}\r\ntype mapStateToPropsType={\r\n    dialogsPage:InitialStateType\r\n}\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: StateType):mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:(action:ActionsTypes) => void):mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageBodyAC())\r\n        },\r\n        updateNewMessageBody: (body:string) => {\r\n            dispatch(updateNewMessageAC(body))\r\n        }\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\redux-store.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users.tsx",["130"],"import React from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from './Users.module.css'\r\nimport axios from \"axios\";\r\nimport usersPhoto from '../../assets/images/users.png'\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div>\r\n<button onClick={getUsers}>get Users</button>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : usersPhoto} className={s.user}/>\r\n                </div>\r\n                <div>\r\n                    {u.followed === true ? <button onClick={() => {\r\n                        props.unFollow(u.id)\r\n                    }}>unFollow</button> : <button onClick={() => {\r\n                        props.follow(u.id)\r\n                    }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                 <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            </div>\r\n        )}\r\n    </div>\r\n}","D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\redux\\users-reducer.ts",[],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\UsersContainer.tsx",["131","132"],"D:\\KMB-37\\online-it-kamasutra\\projects\\my-app\\src\\components\\Users\\Users–°.tsx",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":6,"column":9,"nodeType":"142","messageId":"143","endLine":6,"endColumn":16},{"ruleId":"140","severity":1,"message":"144","line":12,"column":9,"nodeType":"142","messageId":"143","endLine":12,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":6,"column":17,"nodeType":"147","endLine":7,"endColumn":124},{"ruleId":"140","severity":1,"message":"148","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"149","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"150","line":3,"column":9,"nodeType":"142","messageId":"143","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"149","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"145","severity":1,"message":"146","line":10,"column":17,"nodeType":"147","endLine":11,"endColumn":177},{"ruleId":"145","severity":1,"message":"146","line":13,"column":17,"nodeType":"147","endLine":13,"endColumn":71},{"ruleId":"140","severity":1,"message":"151","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"151","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":21,"column":21,"nodeType":"147","endLine":21,"endColumn":105},{"ruleId":"140","severity":1,"message":"144","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"152","line":4,"column":9,"nodeType":"142","messageId":"143","endLine":4,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":26,"column":21,"nodeType":"147","endLine":26,"endColumn":105},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"@typescript-eslint/no-unused-vars","'Dialogs' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'s' is defined but never used.","'NavLink' is defined but never used.","'React' is defined but never used.","'ActionsTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]